Terminals unused in grammar

    XOR


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration
    5                     | PREPROCESSOR

    6 declaration_list: declaration
    7                 | declaration_list declaration

    8 block_item: declaration
    9           | statement
   10           | function_definition

   11 type_qualifier_list: type_qualifier
   12                    | type_qualifier_list type_qualifier

   13 compound_statement: LBRACE RBRACE
   14                   | LBRACE non_empty_block_item_list RBRACE

   15 non_empty_block_item_list: block_item
   16                          | non_empty_block_item_list block_item

   17 function_definition: declaration_specifiers declarator declaration_list compound_statement
   18                    | declaration_specifiers declarator compound_statement

   19 declaration: declaration_specifiers SEMICOLON
   20            | declaration_specifiers init_declarator_list SEMICOLON

   21 init_declarator_list: init_declarator
   22                     | init_declarator_list COMMA init_declarator

   23 init_declarator: declarator ASSIGN initializer
   24                | declarator

   25 declaration_specifiers: storage_class_specifier
   26                       | type_specifier
   27                       | type_qualifier
   28                       | function_specifier
   29                       | alignment_specifier
   30                       | declaration_specifiers storage_class_specifier
   31                       | declaration_specifiers type_specifier
   32                       | declaration_specifiers type_qualifier
   33                       | declaration_specifiers function_specifier
   34                       | declaration_specifiers alignment_specifier

   35 storage_class_specifier: TYPEDEF
   36                        | EXTERN
   37                        | STATIC
   38                        | AUTO
   39                        | REGISTER

   40 type_specifier: VOID
   41               | CHAR
   42               | SHORT
   43               | INT
   44               | LONG
   45               | FLOAT
   46               | DOUBLE
   47               | SIGNED
   48               | UNSIGNED
   49               | BOOL
   50               | struct_or_union_specifier
   51               | enum_specifier
   52               | TYPEDEF_NAME

   53 type_qualifier: CONST
   54               | RESTRICT
   55               | VOLATILE

   56 function_specifier: INLINE
   57                   | NORETURN

   58 alignment_specifier: ALIGNAS LPAREN type_name RPAREN
   59                    | ALIGNAS LPAREN constant_expression RPAREN

   60 declarator: pointer direct_declarator
   61           | direct_declarator

   62 pointer: MULTIPLY
   63        | MULTIPLY type_qualifier_list
   64        | MULTIPLY pointer
   65        | MULTIPLY type_qualifier_list pointer

   66 direct_declarator: IDENTIFIER
   67                  | LPAREN declarator RPAREN
   68                  | direct_declarator LSQBRACKET RSQBRACKET
   69                  | direct_declarator LSQBRACKET assignment_expression RSQBRACKET
   70                  | direct_declarator LPAREN RPAREN
   71                  | direct_declarator LPAREN argument_expression_list RPAREN
   72                  | direct_declarator LPAREN parameter_type_list RPAREN

   73 struct_or_union_specifier: STRUCT LBRACE RBRACE
   74                          | STRUCT LBRACE struct_declaration_list RBRACE
   75                          | STRUCT IDENTIFIER LBRACE RBRACE
   76                          | STRUCT IDENTIFIER LBRACE struct_declaration_list RBRACE
   77                          | STRUCT IDENTIFIER
   78                          | UNION LBRACE RBRACE
   79                          | UNION LBRACE struct_declaration_list RBRACE
   80                          | UNION IDENTIFIER LBRACE RBRACE
   81                          | UNION IDENTIFIER LBRACE struct_declaration_list RBRACE
   82                          | UNION IDENTIFIER

   83 struct_declaration_list: struct_declaration
   84                        | struct_declaration_list struct_declaration

   85 struct_declaration: specifier_qualifier_list SEMICOLON
   86                   | specifier_qualifier_list struct_declarator_list SEMICOLON

   87 specifier_qualifier_list: type_specifier
   88                         | type_specifier specifier_qualifier_list
   89                         | type_qualifier
   90                         | type_qualifier specifier_qualifier_list
   91                         | alignment_specifier
   92                         | alignment_specifier specifier_qualifier_list

   93 struct_declarator_list: struct_declarator
   94                       | struct_declarator_list COMMA struct_declarator

   95 struct_declarator: declarator
   96                  | declarator COLON constant_expression
   97                  | COLON constant_expression

   98 enum_specifier: ENUM LBRACE RBRACE
   99               | ENUM LBRACE enumerator_list RBRACE
  100               | ENUM IDENTIFIER LBRACE RBRACE
  101               | ENUM IDENTIFIER LBRACE enumerator_list RBRACE
  102               | ENUM IDENTIFIER

  103 enumerator_list: enumeration_constant
  104                | enumerator_list COMMA enumeration_constant

  105 enumeration_constant: IDENTIFIER

  106 type_name: specifier_qualifier_list
  107          | specifier_qualifier_list abstract_declarator

  108 abstract_declarator: pointer
  109                    | pointer direct_abstract_declarator
  110                    | direct_abstract_declarator

  111 direct_abstract_declarator: LPAREN abstract_declarator RPAREN
  112                           | LSQBRACKET RSQBRACKET
  113                           | LSQBRACKET type_qualifier_list assignment_expression RSQBRACKET
  114                           | direct_abstract_declarator LSQBRACKET assignment_expression RSQBRACKET
  115                           | LPAREN parameter_type_list RPAREN
  116                           | direct_abstract_declarator LPAREN parameter_type_list RPAREN

  117 parameter_type_list: parameter_list
  118                    | parameter_list COMMA ELLIPSIS

  119 parameter_list: parameter_declaration
  120               | parameter_list COMMA parameter_declaration

  121 parameter_declaration: declaration_specifiers declarator
  122                      | declaration_specifiers abstract_declarator
  123                      | declaration_specifiers

  124 initializer: assignment_expression
  125            | LBRACE initializer_list RBRACE
  126            | LBRACE initializer_list COMMA RBRACE

  127 initializer_list: initializer
  128                 | initializer_list COMMA initializer

  129 statement: expression_statement
  130          | selection_statement
  131          | iteration_statement
  132          | jump_statement
  133          | compound_statement
  134          | labeled_statement

  135 selection_statement: conditional_statement
  136                    | switch_statement

  137 jump_statement: RETURN expression SEMICOLON
  138               | RETURN SEMICOLON
  139               | BREAK SEMICOLON
  140               | CONTINUE SEMICOLON
  141               | GOTO IDENTIFIER SEMICOLON

  142 iteration_statement: DO statement WHILE LPAREN expression RPAREN SEMICOLON
  143                    | WHILE LPAREN expression RPAREN statement
  144                    | FOR LPAREN type_specifier expression_statement expression_statement expression_opt RPAREN statement

  145 conditional_statement: IF LPAREN expression RPAREN statement
  146                      | IF LPAREN expression RPAREN statement ELSE statement

  147 switch_statement: SWITCH LPAREN expression RPAREN statement

  148 labeled_statement: IDENTIFIER COLON statement
  149                  | CASE constant_expression COLON statement
  150                  | DEFAULT COLON statement

  151 expression_opt: expression

  152 expression_statement: SEMICOLON
  153                     | expression SEMICOLON

  154 primary_expression: IDENTIFIER
  155                   | NUMBER
  156                   | CHAR_LITERAL
  157                   | STRING_LITERAL
  158                   | LPAREN expression RPAREN

  159 postfix_expression: primary_expression
  160                   | postfix_expression LSQBRACKET expression RSQBRACKET
  161                   | postfix_expression DOT IDENTIFIER
  162                   | postfix_expression ARROW IDENTIFIER
  163                   | postfix_expression LPAREN argument_expression_list RPAREN
  164                   | postfix_expression LPAREN RPAREN
  165                   | postfix_expression INCREMENT
  166                   | postfix_expression DECREMENT

  167 argument_expression_list: assignment_expression
  168                         | argument_expression_list COMMA assignment_expression

  169 unary_expression: postfix_expression
  170                 | INCREMENT unary_expression
  171                 | DECREMENT unary_expression
  172                 | unary_operator cast_expression
  173                 | SIZEOF unary_expression
  174                 | SIZEOF LPAREN type_name RPAREN

  175 unary_operator: BIT_AND
  176               | MULTIPLY
  177               | PLUS
  178               | MINUS
  179               | BIT_NOT
  180               | NOT

  181 cast_expression: unary_expression
  182                | LPAREN type_name RPAREN cast_expression

  183 multiplicative_expression: cast_expression
  184                          | multiplicative_expression MULTIPLY cast_expression
  185                          | multiplicative_expression DIVIDE cast_expression
  186                          | multiplicative_expression MODULO cast_expression

  187 additive_expression: multiplicative_expression
  188                    | additive_expression PLUS multiplicative_expression
  189                    | additive_expression MINUS multiplicative_expression

  190 shift_expression: additive_expression
  191                 | shift_expression SHIFT_LEFT additive_expression
  192                 | shift_expression SHIFT_RIGHT additive_expression

  193 relational_expression: shift_expression
  194                      | relational_expression LESS shift_expression
  195                      | relational_expression GREATER shift_expression
  196                      | relational_expression LESS_EQUAL shift_expression
  197                      | relational_expression GREATER_EQUAL shift_expression

  198 equality_expression: relational_expression
  199                    | equality_expression EQUAL relational_expression
  200                    | equality_expression NOT_EQUAL relational_expression

  201 and_expression: equality_expression
  202               | and_expression BIT_AND equality_expression

  203 exclusive_or_expression: and_expression
  204                        | exclusive_or_expression BIT_XOR and_expression

  205 inclusive_or_expression: exclusive_or_expression
  206                        | inclusive_or_expression BIT_OR exclusive_or_expression

  207 logical_and_expression: inclusive_or_expression
  208                       | logical_and_expression AND inclusive_or_expression

  209 logical_or_expression: logical_and_expression
  210                      | logical_or_expression OR logical_and_expression

  211 conditional_expression: logical_or_expression
  212                       | logical_or_expression QUESTION expression COLON conditional_expression

  213 assignment_expression: conditional_expression
  214                      | unary_expression ASSIGN assignment_expression
  215                      | unary_expression PLUS_ASSIGN assignment_expression
  216                      | unary_expression MINUS_ASSIGN assignment_expression
  217                      | unary_expression MUL_ASSIGN assignment_expression
  218                      | unary_expression DIV_ASSIGN assignment_expression
  219                      | unary_expression MOD_ASSIGN assignment_expression
  220                      | unary_expression SHIFT_LEFT_ASSIGN assignment_expression
  221                      | unary_expression SHIFT_RIGHT_ASSIGN assignment_expression
  222                      | unary_expression BIT_AND_ASSIGN assignment_expression
  223                      | unary_expression BIT_XOR_ASSIGN assignment_expression
  224                      | unary_expression BIT_OR_ASSIGN assignment_expression

  225 expression: assignment_expression
  226           | expression COMMA assignment_expression

  227 constant_expression: conditional_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PREPROCESSOR <sval> (258) 5
    IDENTIFIER <sval> (259) 66 75 76 77 80 81 82 100 101 102 105 141 148 154 161 162
    NUMBER <sval> (260) 155
    CHAR_LITERAL <sval> (261) 156
    STRING_LITERAL <sval> (262) 157
    TYPEDEF_NAME <sval> (263) 52
    TYPEDEF <sval> (264) 35
    EXTERN <sval> (265) 36
    STATIC <sval> (266) 37
    AUTO <sval> (267) 38
    REGISTER <sval> (268) 39
    VOID <sval> (269) 40
    CHAR <sval> (270) 41
    SHORT <sval> (271) 42
    INT <sval> (272) 43
    LONG <sval> (273) 44
    FLOAT <sval> (274) 45
    DOUBLE <sval> (275) 46
    SIGNED <sval> (276) 47
    UNSIGNED <sval> (277) 48
    BOOL <sval> (278) 49
    STRUCT (279) 73 74 75 76 77
    UNION (280) 78 79 80 81 82
    ENUM (281) 98 99 100 101 102
    CONST <sval> (282) 53
    RESTRICT <sval> (283) 54
    VOLATILE <sval> (284) 55
    INLINE <sval> (285) 56
    NORETURN <sval> (286) 57
    ALIGNAS (287) 58 59
    SIZEOF (288) 173 174
    ELLIPSIS (289) 118
    LPAREN (290) 58 59 67 70 71 72 111 115 116 142 143 144 145 146 147 158 163 164 174 182
    RPAREN (291) 58 59 67 70 71 72 111 115 116 142 143 144 145 146 147 158 163 164 174 182
    LSQBRACKET (292) 68 69 112 113 114 160
    RSQBRACKET (293) 68 69 112 113 114 160
    LBRACE (294) 13 14 73 74 75 76 78 79 80 81 98 99 100 101 125 126
    RBRACE (295) 13 14 73 74 75 76 78 79 80 81 98 99 100 101 125 126
    SEMICOLON (296) 19 20 85 86 137 138 139 140 141 142 152 153
    COMMA (297) 22 94 104 118 120 126 128 168 226
    COLON (298) 96 97 148 149 150 212
    DOT (299) 161
    ARROW (300) 162
    QUESTION (301) 212
    ASSIGN (302) 23 214
    PLUS_ASSIGN (303) 215
    MINUS_ASSIGN (304) 216
    MUL_ASSIGN (305) 217
    DIV_ASSIGN (306) 218
    MOD_ASSIGN (307) 219
    SHIFT_LEFT_ASSIGN (308) 220
    SHIFT_RIGHT_ASSIGN (309) 221
    BIT_AND_ASSIGN (310) 222
    BIT_XOR_ASSIGN (311) 223
    BIT_OR_ASSIGN (312) 224
    OR (313) 210
    AND (314) 208
    BIT_OR (315) 206
    BIT_AND (316) 175 202
    BIT_XOR (317) 204
    XOR (318)
    NOT (319) 180
    BIT_NOT (320) 179
    EQUAL (321) 199
    NOT_EQUAL (322) 200
    LESS (323) 194
    GREATER (324) 195
    LESS_EQUAL (325) 196
    GREATER_EQUAL (326) 197
    SHIFT_LEFT (327) 191
    SHIFT_RIGHT (328) 192
    PLUS (329) 177 188
    MINUS (330) 178 189
    MULTIPLY (331) 62 63 64 65 176 184
    DIVIDE (332) 185
    MODULO (333) 186
    IF (334) 145 146
    ELSE (335) 146
    WHILE (336) 142 143
    GOTO (337) 141
    BREAK (338) 139
    CONTINUE (339) 140
    FOR (340) 144
    SWITCH (341) 147
    CASE (342) 149
    DEFAULT (343) 150
    DO (344) 142
    INCREMENT (345) 165 170
    DECREMENT (346) 166 171
    RETURN (347) 137 138
    LOWER_THAN_ELSE (348)


Nonterminals, with rules where they appear

    $accept (94)
        on left: 0
    translation_unit <node> (95)
        on left: 1 2
        on right: 0 2
    external_declaration <node> (96)
        on left: 3 4 5
        on right: 1 2
    declaration_list <node> (97)
        on left: 6 7
        on right: 7 17
    block_item <node> (98)
        on left: 8 9 10
        on right: 15 16
    type_qualifier_list <node> (99)
        on left: 11 12
        on right: 12 63 65 113
    compound_statement <node> (100)
        on left: 13 14
        on right: 17 18 133
    non_empty_block_item_list <node> (101)
        on left: 15 16
        on right: 14 16
    function_definition <node> (102)
        on left: 17 18
        on right: 3 10
    declaration <node> (103)
        on left: 19 20
        on right: 4 6 7 8
    init_declarator_list <node> (104)
        on left: 21 22
        on right: 20 22
    init_declarator <node> (105)
        on left: 23 24
        on right: 21 22
    declaration_specifiers <node> (106)
        on left: 25 26 27 28 29 30 31 32 33 34
        on right: 17 18 19 20 30 31 32 33 34 121 122 123
    storage_class_specifier <node> (107)
        on left: 35 36 37 38 39
        on right: 25 30
    type_specifier <node> (108)
        on left: 40 41 42 43 44 45 46 47 48 49 50 51 52
        on right: 26 31 87 88 144
    type_qualifier <node> (109)
        on left: 53 54 55
        on right: 11 12 27 32 89 90
    function_specifier <node> (110)
        on left: 56 57
        on right: 28 33
    alignment_specifier <node> (111)
        on left: 58 59
        on right: 29 34 91 92
    declarator <node> (112)
        on left: 60 61
        on right: 17 18 23 24 67 95 96 121
    pointer <node> (113)
        on left: 62 63 64 65
        on right: 60 64 65 108 109
    direct_declarator <node> (114)
        on left: 66 67 68 69 70 71 72
        on right: 60 61 68 69 70 71 72
    struct_or_union_specifier <node> (115)
        on left: 73 74 75 76 77 78 79 80 81 82
        on right: 50
    struct_declaration_list <node> (116)
        on left: 83 84
        on right: 74 76 79 81 84
    struct_declaration <node> (117)
        on left: 85 86
        on right: 83 84
    specifier_qualifier_list <node> (118)
        on left: 87 88 89 90 91 92
        on right: 85 86 88 90 92 106 107
    struct_declarator_list <node> (119)
        on left: 93 94
        on right: 86 94
    struct_declarator <node> (120)
        on left: 95 96 97
        on right: 93 94
    enum_specifier <node> (121)
        on left: 98 99 100 101 102
        on right: 51
    enumerator_list <node> (122)
        on left: 103 104
        on right: 99 101 104
    enumeration_constant <node> (123)
        on left: 105
        on right: 103 104
    type_name <node> (124)
        on left: 106 107
        on right: 58 174 182
    abstract_declarator <node> (125)
        on left: 108 109 110
        on right: 107 111 122
    direct_abstract_declarator <node> (126)
        on left: 111 112 113 114 115 116
        on right: 109 110 114 116
    parameter_type_list <node> (127)
        on left: 117 118
        on right: 72 115 116
    parameter_list <node> (128)
        on left: 119 120
        on right: 117 118 120
    parameter_declaration <node> (129)
        on left: 121 122 123
        on right: 119 120
    initializer <node> (130)
        on left: 124 125 126
        on right: 23 127 128
    initializer_list <node> (131)
        on left: 127 128
        on right: 125 126 128
    statement <node> (132)
        on left: 129 130 131 132 133 134
        on right: 9 142 143 144 145 146 147 148 149 150
    selection_statement <node> (133)
        on left: 135 136
        on right: 130
    jump_statement <node> (134)
        on left: 137 138 139 140 141
        on right: 132
    iteration_statement <node> (135)
        on left: 142 143 144
        on right: 131
    conditional_statement <node> (136)
        on left: 145 146
        on right: 135
    switch_statement <node> (137)
        on left: 147
        on right: 136
    labeled_statement <node> (138)
        on left: 148 149 150
        on right: 134
    expression_opt <node> (139)
        on left: 151
        on right: 144
    expression_statement <node> (140)
        on left: 152 153
        on right: 129 144
    primary_expression <node> (141)
        on left: 154 155 156 157 158
        on right: 159
    postfix_expression <node> (142)
        on left: 159 160 161 162 163 164 165 166
        on right: 160 161 162 163 164 165 166 169
    argument_expression_list <node> (143)
        on left: 167 168
        on right: 71 163 168
    unary_expression <node> (144)
        on left: 169 170 171 172 173 174
        on right: 170 171 173 181 214 215 216 217 218 219 220 221 222 223 224
    unary_operator <node> (145)
        on left: 175 176 177 178 179 180
        on right: 172
    cast_expression <node> (146)
        on left: 181 182
        on right: 172 182 183 184 185 186
    multiplicative_expression <node> (147)
        on left: 183 184 185 186
        on right: 184 185 186 187 188 189
    additive_expression <node> (148)
        on left: 187 188 189
        on right: 188 189 190 191 192
    shift_expression <node> (149)
        on left: 190 191 192
        on right: 191 192 193 194 195 196 197
    relational_expression <node> (150)
        on left: 193 194 195 196 197
        on right: 194 195 196 197 198 199 200
    equality_expression <node> (151)
        on left: 198 199 200
        on right: 199 200 201 202
    and_expression <node> (152)
        on left: 201 202
        on right: 202 203 204
    exclusive_or_expression <node> (153)
        on left: 203 204
        on right: 204 205 206
    inclusive_or_expression <node> (154)
        on left: 205 206
        on right: 206 207 208
    logical_and_expression <node> (155)
        on left: 207 208
        on right: 208 209 210
    logical_or_expression <node> (156)
        on left: 209 210
        on right: 210 211 212
    conditional_expression <node> (157)
        on left: 211 212
        on right: 212 213 227
    assignment_expression <node> (158)
        on left: 213 214 215 216 217 218 219 220 221 222 223 224
        on right: 69 113 114 124 167 168 214 215 216 217 218 219 220 221 222 223 224 225 226
    expression <node> (159)
        on left: 225 226
        on right: 137 142 143 145 146 147 151 153 158 160 212 226
    constant_expression <node> (160)
        on left: 227
        on right: 59 96 97 149


State 0

    0 $accept: • translation_unit $end

    PREPROCESSOR  shift, and go to state 1
    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26

    translation_unit           go to state 27
    external_declaration       go to state 28
    function_definition        go to state 29
    declaration                go to state 30
    declaration_specifiers     go to state 31
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 1

    5 external_declaration: PREPROCESSOR •

    $default  reduce using rule 5 (external_declaration)


State 2

   52 type_specifier: TYPEDEF_NAME •

    $default  reduce using rule 52 (type_specifier)


State 3

   35 storage_class_specifier: TYPEDEF •

    $default  reduce using rule 35 (storage_class_specifier)


State 4

   36 storage_class_specifier: EXTERN •

    $default  reduce using rule 36 (storage_class_specifier)


State 5

   37 storage_class_specifier: STATIC •

    $default  reduce using rule 37 (storage_class_specifier)


State 6

   38 storage_class_specifier: AUTO •

    $default  reduce using rule 38 (storage_class_specifier)


State 7

   39 storage_class_specifier: REGISTER •

    $default  reduce using rule 39 (storage_class_specifier)


State 8

   40 type_specifier: VOID •

    $default  reduce using rule 40 (type_specifier)


State 9

   41 type_specifier: CHAR •

    $default  reduce using rule 41 (type_specifier)


State 10

   42 type_specifier: SHORT •

    $default  reduce using rule 42 (type_specifier)


State 11

   43 type_specifier: INT •

    $default  reduce using rule 43 (type_specifier)


State 12

   44 type_specifier: LONG •

    $default  reduce using rule 44 (type_specifier)


State 13

   45 type_specifier: FLOAT •

    $default  reduce using rule 45 (type_specifier)


State 14

   46 type_specifier: DOUBLE •

    $default  reduce using rule 46 (type_specifier)


State 15

   47 type_specifier: SIGNED •

    $default  reduce using rule 47 (type_specifier)


State 16

   48 type_specifier: UNSIGNED •

    $default  reduce using rule 48 (type_specifier)


State 17

   49 type_specifier: BOOL •

    $default  reduce using rule 49 (type_specifier)


State 18

   73 struct_or_union_specifier: STRUCT • LBRACE RBRACE
   74                          | STRUCT • LBRACE struct_declaration_list RBRACE
   75                          | STRUCT • IDENTIFIER LBRACE RBRACE
   76                          | STRUCT • IDENTIFIER LBRACE struct_declaration_list RBRACE
   77                          | STRUCT • IDENTIFIER

    IDENTIFIER  shift, and go to state 39
    LBRACE      shift, and go to state 40


State 19

   78 struct_or_union_specifier: UNION • LBRACE RBRACE
   79                          | UNION • LBRACE struct_declaration_list RBRACE
   80                          | UNION • IDENTIFIER LBRACE RBRACE
   81                          | UNION • IDENTIFIER LBRACE struct_declaration_list RBRACE
   82                          | UNION • IDENTIFIER

    IDENTIFIER  shift, and go to state 41
    LBRACE      shift, and go to state 42


State 20

   98 enum_specifier: ENUM • LBRACE RBRACE
   99               | ENUM • LBRACE enumerator_list RBRACE
  100               | ENUM • IDENTIFIER LBRACE RBRACE
  101               | ENUM • IDENTIFIER LBRACE enumerator_list RBRACE
  102               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 43
    LBRACE      shift, and go to state 44


State 21

   53 type_qualifier: CONST •

    $default  reduce using rule 53 (type_qualifier)


State 22

   54 type_qualifier: RESTRICT •

    $default  reduce using rule 54 (type_qualifier)


State 23

   55 type_qualifier: VOLATILE •

    $default  reduce using rule 55 (type_qualifier)


State 24

   56 function_specifier: INLINE •

    $default  reduce using rule 56 (function_specifier)


State 25

   57 function_specifier: NORETURN •

    $default  reduce using rule 57 (function_specifier)


State 26

   58 alignment_specifier: ALIGNAS • LPAREN type_name RPAREN
   59                    | ALIGNAS • LPAREN constant_expression RPAREN

    LPAREN  shift, and go to state 45


State 27

    0 $accept: translation_unit • $end
    2 translation_unit: translation_unit • external_declaration

    $end          shift, and go to state 46
    PREPROCESSOR  shift, and go to state 1
    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26

    external_declaration       go to state 47
    function_definition        go to state 29
    declaration                go to state 30
    declaration_specifiers     go to state 31
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 28

    1 translation_unit: external_declaration •

    $default  reduce using rule 1 (translation_unit)


State 29

    3 external_declaration: function_definition •

    $default  reduce using rule 3 (external_declaration)


State 30

    4 external_declaration: declaration •

    $default  reduce using rule 4 (external_declaration)


State 31

   17 function_definition: declaration_specifiers • declarator declaration_list compound_statement
   18                    | declaration_specifiers • declarator compound_statement
   19 declaration: declaration_specifiers • SEMICOLON
   20            | declaration_specifiers • init_declarator_list SEMICOLON
   30 declaration_specifiers: declaration_specifiers • storage_class_specifier
   31                       | declaration_specifiers • type_specifier
   32                       | declaration_specifiers • type_qualifier
   33                       | declaration_specifiers • function_specifier
   34                       | declaration_specifiers • alignment_specifier

    IDENTIFIER    shift, and go to state 48
    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    LPAREN        shift, and go to state 49
    SEMICOLON     shift, and go to state 50
    MULTIPLY      shift, and go to state 51

    init_declarator_list       go to state 52
    init_declarator            go to state 53
    storage_class_specifier    go to state 54
    type_specifier             go to state 55
    type_qualifier             go to state 56
    function_specifier         go to state 57
    alignment_specifier        go to state 58
    declarator                 go to state 59
    pointer                    go to state 60
    direct_declarator          go to state 61
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 32

   25 declaration_specifiers: storage_class_specifier •

    $default  reduce using rule 25 (declaration_specifiers)


State 33

   26 declaration_specifiers: type_specifier •

    $default  reduce using rule 26 (declaration_specifiers)


State 34

   27 declaration_specifiers: type_qualifier •

    $default  reduce using rule 27 (declaration_specifiers)


State 35

   28 declaration_specifiers: function_specifier •

    $default  reduce using rule 28 (declaration_specifiers)


State 36

   29 declaration_specifiers: alignment_specifier •

    $default  reduce using rule 29 (declaration_specifiers)


State 37

   50 type_specifier: struct_or_union_specifier •

    $default  reduce using rule 50 (type_specifier)


State 38

   51 type_specifier: enum_specifier •

    $default  reduce using rule 51 (type_specifier)


State 39

   75 struct_or_union_specifier: STRUCT IDENTIFIER • LBRACE RBRACE
   76                          | STRUCT IDENTIFIER • LBRACE struct_declaration_list RBRACE
   77                          | STRUCT IDENTIFIER •

    LBRACE  shift, and go to state 62

    $default  reduce using rule 77 (struct_or_union_specifier)


State 40

   73 struct_or_union_specifier: STRUCT LBRACE • RBRACE
   74                          | STRUCT LBRACE • struct_declaration_list RBRACE

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    ALIGNAS       shift, and go to state 26
    RBRACE        shift, and go to state 63

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    struct_declaration_list    go to state 67
    struct_declaration         go to state 68
    specifier_qualifier_list   go to state 69
    enum_specifier             go to state 38


State 41

   80 struct_or_union_specifier: UNION IDENTIFIER • LBRACE RBRACE
   81                          | UNION IDENTIFIER • LBRACE struct_declaration_list RBRACE
   82                          | UNION IDENTIFIER •

    LBRACE  shift, and go to state 70

    $default  reduce using rule 82 (struct_or_union_specifier)


State 42

   78 struct_or_union_specifier: UNION LBRACE • RBRACE
   79                          | UNION LBRACE • struct_declaration_list RBRACE

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    ALIGNAS       shift, and go to state 26
    RBRACE        shift, and go to state 71

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    struct_declaration_list    go to state 72
    struct_declaration         go to state 68
    specifier_qualifier_list   go to state 69
    enum_specifier             go to state 38


State 43

  100 enum_specifier: ENUM IDENTIFIER • LBRACE RBRACE
  101               | ENUM IDENTIFIER • LBRACE enumerator_list RBRACE
  102               | ENUM IDENTIFIER •

    LBRACE  shift, and go to state 73

    $default  reduce using rule 102 (enum_specifier)


State 44

   98 enum_specifier: ENUM LBRACE • RBRACE
   99               | ENUM LBRACE • enumerator_list RBRACE

    IDENTIFIER  shift, and go to state 74
    RBRACE      shift, and go to state 75

    enumerator_list       go to state 76
    enumeration_constant  go to state 77


State 45

   58 alignment_specifier: ALIGNAS LPAREN • type_name RPAREN
   59                    | ALIGNAS LPAREN • constant_expression RPAREN

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    TYPEDEF_NAME    shift, and go to state 2
    VOID            shift, and go to state 8
    CHAR            shift, and go to state 9
    SHORT           shift, and go to state 10
    INT             shift, and go to state 11
    LONG            shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    SIGNED          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    BOOL            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    ENUM            shift, and go to state 20
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    ALIGNAS         shift, and go to state 26
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    specifier_qualifier_list   go to state 92
    enum_specifier             go to state 38
    type_name                  go to state 93
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 109
    constant_expression        go to state 110


State 46

    0 $accept: translation_unit $end •

    $default  accept


State 47

    2 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 48

   66 direct_declarator: IDENTIFIER •

    $default  reduce using rule 66 (direct_declarator)


State 49

   67 direct_declarator: LPAREN • declarator RPAREN

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49
    MULTIPLY    shift, and go to state 51

    declarator         go to state 111
    pointer            go to state 60
    direct_declarator  go to state 61


State 50

   19 declaration: declaration_specifiers SEMICOLON •

    $default  reduce using rule 19 (declaration)


State 51

   62 pointer: MULTIPLY •
   63        | MULTIPLY • type_qualifier_list
   64        | MULTIPLY • pointer
   65        | MULTIPLY • type_qualifier_list pointer

    CONST     shift, and go to state 21
    RESTRICT  shift, and go to state 22
    VOLATILE  shift, and go to state 23
    MULTIPLY  shift, and go to state 51

    $default  reduce using rule 62 (pointer)

    type_qualifier_list  go to state 112
    type_qualifier       go to state 113
    pointer              go to state 114


State 52

   20 declaration: declaration_specifiers init_declarator_list • SEMICOLON
   22 init_declarator_list: init_declarator_list • COMMA init_declarator

    SEMICOLON  shift, and go to state 115
    COMMA      shift, and go to state 116


State 53

   21 init_declarator_list: init_declarator •

    $default  reduce using rule 21 (init_declarator_list)


State 54

   30 declaration_specifiers: declaration_specifiers storage_class_specifier •

    $default  reduce using rule 30 (declaration_specifiers)


State 55

   31 declaration_specifiers: declaration_specifiers type_specifier •

    $default  reduce using rule 31 (declaration_specifiers)


State 56

   32 declaration_specifiers: declaration_specifiers type_qualifier •

    $default  reduce using rule 32 (declaration_specifiers)


State 57

   33 declaration_specifiers: declaration_specifiers function_specifier •

    $default  reduce using rule 33 (declaration_specifiers)


State 58

   34 declaration_specifiers: declaration_specifiers alignment_specifier •

    $default  reduce using rule 34 (declaration_specifiers)


State 59

   17 function_definition: declaration_specifiers declarator • declaration_list compound_statement
   18                    | declaration_specifiers declarator • compound_statement
   23 init_declarator: declarator • ASSIGN initializer
   24                | declarator •

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    LBRACE        shift, and go to state 117
    ASSIGN        shift, and go to state 118

    $default  reduce using rule 24 (init_declarator)

    declaration_list           go to state 119
    compound_statement         go to state 120
    declaration                go to state 121
    declaration_specifiers     go to state 122
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 60

   60 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49

    direct_declarator  go to state 123


State 61

   61 declarator: direct_declarator •
   68 direct_declarator: direct_declarator • LSQBRACKET RSQBRACKET
   69                  | direct_declarator • LSQBRACKET assignment_expression RSQBRACKET
   70                  | direct_declarator • LPAREN RPAREN
   71                  | direct_declarator • LPAREN argument_expression_list RPAREN
   72                  | direct_declarator • LPAREN parameter_type_list RPAREN

    LPAREN      shift, and go to state 124
    LSQBRACKET  shift, and go to state 125

    $default  reduce using rule 61 (declarator)


State 62

   75 struct_or_union_specifier: STRUCT IDENTIFIER LBRACE • RBRACE
   76                          | STRUCT IDENTIFIER LBRACE • struct_declaration_list RBRACE

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    ALIGNAS       shift, and go to state 26
    RBRACE        shift, and go to state 126

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    struct_declaration_list    go to state 127
    struct_declaration         go to state 68
    specifier_qualifier_list   go to state 69
    enum_specifier             go to state 38


State 63

   73 struct_or_union_specifier: STRUCT LBRACE RBRACE •

    $default  reduce using rule 73 (struct_or_union_specifier)


State 64

   87 specifier_qualifier_list: type_specifier •
   88                         | type_specifier • specifier_qualifier_list

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    ALIGNAS       shift, and go to state 26

    $default  reduce using rule 87 (specifier_qualifier_list)

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    specifier_qualifier_list   go to state 128
    enum_specifier             go to state 38


State 65

   89 specifier_qualifier_list: type_qualifier •
   90                         | type_qualifier • specifier_qualifier_list

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    ALIGNAS       shift, and go to state 26

    $default  reduce using rule 89 (specifier_qualifier_list)

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    specifier_qualifier_list   go to state 129
    enum_specifier             go to state 38


State 66

   91 specifier_qualifier_list: alignment_specifier •
   92                         | alignment_specifier • specifier_qualifier_list

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    ALIGNAS       shift, and go to state 26

    $default  reduce using rule 91 (specifier_qualifier_list)

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    specifier_qualifier_list   go to state 130
    enum_specifier             go to state 38


State 67

   74 struct_or_union_specifier: STRUCT LBRACE struct_declaration_list • RBRACE
   84 struct_declaration_list: struct_declaration_list • struct_declaration

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    ALIGNAS       shift, and go to state 26
    RBRACE        shift, and go to state 131

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    struct_declaration         go to state 132
    specifier_qualifier_list   go to state 69
    enum_specifier             go to state 38


State 68

   83 struct_declaration_list: struct_declaration •

    $default  reduce using rule 83 (struct_declaration_list)


State 69

   85 struct_declaration: specifier_qualifier_list • SEMICOLON
   86                   | specifier_qualifier_list • struct_declarator_list SEMICOLON

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49
    SEMICOLON   shift, and go to state 133
    COLON       shift, and go to state 134
    MULTIPLY    shift, and go to state 51

    declarator              go to state 135
    pointer                 go to state 60
    direct_declarator       go to state 61
    struct_declarator_list  go to state 136
    struct_declarator       go to state 137


State 70

   80 struct_or_union_specifier: UNION IDENTIFIER LBRACE • RBRACE
   81                          | UNION IDENTIFIER LBRACE • struct_declaration_list RBRACE

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    ALIGNAS       shift, and go to state 26
    RBRACE        shift, and go to state 138

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    struct_declaration_list    go to state 139
    struct_declaration         go to state 68
    specifier_qualifier_list   go to state 69
    enum_specifier             go to state 38


State 71

   78 struct_or_union_specifier: UNION LBRACE RBRACE •

    $default  reduce using rule 78 (struct_or_union_specifier)


State 72

   79 struct_or_union_specifier: UNION LBRACE struct_declaration_list • RBRACE
   84 struct_declaration_list: struct_declaration_list • struct_declaration

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    ALIGNAS       shift, and go to state 26
    RBRACE        shift, and go to state 140

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    struct_declaration         go to state 132
    specifier_qualifier_list   go to state 69
    enum_specifier             go to state 38


State 73

  100 enum_specifier: ENUM IDENTIFIER LBRACE • RBRACE
  101               | ENUM IDENTIFIER LBRACE • enumerator_list RBRACE

    IDENTIFIER  shift, and go to state 74
    RBRACE      shift, and go to state 141

    enumerator_list       go to state 142
    enumeration_constant  go to state 77


State 74

  105 enumeration_constant: IDENTIFIER •

    $default  reduce using rule 105 (enumeration_constant)


State 75

   98 enum_specifier: ENUM LBRACE RBRACE •

    $default  reduce using rule 98 (enum_specifier)


State 76

   99 enum_specifier: ENUM LBRACE enumerator_list • RBRACE
  104 enumerator_list: enumerator_list • COMMA enumeration_constant

    RBRACE  shift, and go to state 143
    COMMA   shift, and go to state 144


State 77

  103 enumerator_list: enumeration_constant •

    $default  reduce using rule 103 (enumerator_list)


State 78

  154 primary_expression: IDENTIFIER •

    $default  reduce using rule 154 (primary_expression)


State 79

  155 primary_expression: NUMBER •

    $default  reduce using rule 155 (primary_expression)


State 80

  156 primary_expression: CHAR_LITERAL •

    $default  reduce using rule 156 (primary_expression)


State 81

  157 primary_expression: STRING_LITERAL •

    $default  reduce using rule 157 (primary_expression)


State 82

  173 unary_expression: SIZEOF • unary_expression
  174                 | SIZEOF • LPAREN type_name RPAREN

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 145
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression  go to state 94
    postfix_expression  go to state 95
    unary_expression    go to state 146
    unary_operator      go to state 97


State 83

  158 primary_expression: LPAREN • expression RPAREN
  182 cast_expression: LPAREN • type_name RPAREN cast_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    TYPEDEF_NAME    shift, and go to state 2
    VOID            shift, and go to state 8
    CHAR            shift, and go to state 9
    SHORT           shift, and go to state 10
    INT             shift, and go to state 11
    LONG            shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    SIGNED          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    BOOL            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    ENUM            shift, and go to state 20
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    ALIGNAS         shift, and go to state 26
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    specifier_qualifier_list   go to state 92
    enum_specifier             go to state 38
    type_name                  go to state 147
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 151


State 84

  175 unary_operator: BIT_AND •

    $default  reduce using rule 175 (unary_operator)


State 85

  180 unary_operator: NOT •

    $default  reduce using rule 180 (unary_operator)


State 86

  179 unary_operator: BIT_NOT •

    $default  reduce using rule 179 (unary_operator)


State 87

  177 unary_operator: PLUS •

    $default  reduce using rule 177 (unary_operator)


State 88

  178 unary_operator: MINUS •

    $default  reduce using rule 178 (unary_operator)


State 89

  176 unary_operator: MULTIPLY •

    $default  reduce using rule 176 (unary_operator)


State 90

  170 unary_expression: INCREMENT • unary_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 152
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression  go to state 94
    postfix_expression  go to state 95
    unary_expression    go to state 153
    unary_operator      go to state 97


State 91

  171 unary_expression: DECREMENT • unary_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 152
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression  go to state 94
    postfix_expression  go to state 95
    unary_expression    go to state 154
    unary_operator      go to state 97


State 92

  106 type_name: specifier_qualifier_list •
  107          | specifier_qualifier_list • abstract_declarator

    LPAREN      shift, and go to state 155
    LSQBRACKET  shift, and go to state 156
    MULTIPLY    shift, and go to state 51

    $default  reduce using rule 106 (type_name)

    pointer                     go to state 157
    abstract_declarator         go to state 158
    direct_abstract_declarator  go to state 159


State 93

   58 alignment_specifier: ALIGNAS LPAREN type_name • RPAREN

    RPAREN  shift, and go to state 160


State 94

  159 postfix_expression: primary_expression •

    $default  reduce using rule 159 (postfix_expression)


State 95

  160 postfix_expression: postfix_expression • LSQBRACKET expression RSQBRACKET
  161                   | postfix_expression • DOT IDENTIFIER
  162                   | postfix_expression • ARROW IDENTIFIER
  163                   | postfix_expression • LPAREN argument_expression_list RPAREN
  164                   | postfix_expression • LPAREN RPAREN
  165                   | postfix_expression • INCREMENT
  166                   | postfix_expression • DECREMENT
  169 unary_expression: postfix_expression •

    LPAREN      shift, and go to state 161
    LSQBRACKET  shift, and go to state 162
    DOT         shift, and go to state 163
    ARROW       shift, and go to state 164
    INCREMENT   shift, and go to state 165
    DECREMENT   shift, and go to state 166

    $default  reduce using rule 169 (unary_expression)


State 96

  181 cast_expression: unary_expression •

    $default  reduce using rule 181 (cast_expression)


State 97

  172 unary_expression: unary_operator • cast_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression  go to state 94
    postfix_expression  go to state 95
    unary_expression    go to state 96
    unary_operator      go to state 97
    cast_expression     go to state 167


State 98

  183 multiplicative_expression: cast_expression •

    $default  reduce using rule 183 (multiplicative_expression)


State 99

  184 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
  185                          | multiplicative_expression • DIVIDE cast_expression
  186                          | multiplicative_expression • MODULO cast_expression
  187 additive_expression: multiplicative_expression •

    MULTIPLY  shift, and go to state 168
    DIVIDE    shift, and go to state 169
    MODULO    shift, and go to state 170

    $default  reduce using rule 187 (additive_expression)


State 100

  188 additive_expression: additive_expression • PLUS multiplicative_expression
  189                    | additive_expression • MINUS multiplicative_expression
  190 shift_expression: additive_expression •

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172

    $default  reduce using rule 190 (shift_expression)


State 101

  191 shift_expression: shift_expression • SHIFT_LEFT additive_expression
  192                 | shift_expression • SHIFT_RIGHT additive_expression
  193 relational_expression: shift_expression •

    SHIFT_LEFT   shift, and go to state 173
    SHIFT_RIGHT  shift, and go to state 174

    $default  reduce using rule 193 (relational_expression)


State 102

  194 relational_expression: relational_expression • LESS shift_expression
  195                      | relational_expression • GREATER shift_expression
  196                      | relational_expression • LESS_EQUAL shift_expression
  197                      | relational_expression • GREATER_EQUAL shift_expression
  198 equality_expression: relational_expression •

    LESS           shift, and go to state 175
    GREATER        shift, and go to state 176
    LESS_EQUAL     shift, and go to state 177
    GREATER_EQUAL  shift, and go to state 178

    $default  reduce using rule 198 (equality_expression)


State 103

  199 equality_expression: equality_expression • EQUAL relational_expression
  200                    | equality_expression • NOT_EQUAL relational_expression
  201 and_expression: equality_expression •

    EQUAL      shift, and go to state 179
    NOT_EQUAL  shift, and go to state 180

    $default  reduce using rule 201 (and_expression)


State 104

  202 and_expression: and_expression • BIT_AND equality_expression
  203 exclusive_or_expression: and_expression •

    BIT_AND  shift, and go to state 181

    $default  reduce using rule 203 (exclusive_or_expression)


State 105

  204 exclusive_or_expression: exclusive_or_expression • BIT_XOR and_expression
  205 inclusive_or_expression: exclusive_or_expression •

    BIT_XOR  shift, and go to state 182

    $default  reduce using rule 205 (inclusive_or_expression)


State 106

  206 inclusive_or_expression: inclusive_or_expression • BIT_OR exclusive_or_expression
  207 logical_and_expression: inclusive_or_expression •

    BIT_OR  shift, and go to state 183

    $default  reduce using rule 207 (logical_and_expression)


State 107

  208 logical_and_expression: logical_and_expression • AND inclusive_or_expression
  209 logical_or_expression: logical_and_expression •

    AND  shift, and go to state 184

    $default  reduce using rule 209 (logical_or_expression)


State 108

  210 logical_or_expression: logical_or_expression • OR logical_and_expression
  211 conditional_expression: logical_or_expression •
  212                       | logical_or_expression • QUESTION expression COLON conditional_expression

    QUESTION  shift, and go to state 185
    OR        shift, and go to state 186

    $default  reduce using rule 211 (conditional_expression)


State 109

  227 constant_expression: conditional_expression •

    $default  reduce using rule 227 (constant_expression)


State 110

   59 alignment_specifier: ALIGNAS LPAREN constant_expression • RPAREN

    RPAREN  shift, and go to state 187


State 111

   67 direct_declarator: LPAREN declarator • RPAREN

    RPAREN  shift, and go to state 188


State 112

   12 type_qualifier_list: type_qualifier_list • type_qualifier
   63 pointer: MULTIPLY type_qualifier_list •
   65        | MULTIPLY type_qualifier_list • pointer

    CONST     shift, and go to state 21
    RESTRICT  shift, and go to state 22
    VOLATILE  shift, and go to state 23
    MULTIPLY  shift, and go to state 51

    $default  reduce using rule 63 (pointer)

    type_qualifier  go to state 189
    pointer         go to state 190


State 113

   11 type_qualifier_list: type_qualifier •

    $default  reduce using rule 11 (type_qualifier_list)


State 114

   64 pointer: MULTIPLY pointer •

    $default  reduce using rule 64 (pointer)


State 115

   20 declaration: declaration_specifiers init_declarator_list SEMICOLON •

    $default  reduce using rule 20 (declaration)


State 116

   22 init_declarator_list: init_declarator_list COMMA • init_declarator

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49
    MULTIPLY    shift, and go to state 51

    init_declarator    go to state 191
    declarator         go to state 192
    pointer            go to state 60
    direct_declarator  go to state 61


State 117

   13 compound_statement: LBRACE • RBRACE
   14                   | LBRACE • non_empty_block_item_list RBRACE

    IDENTIFIER      shift, and go to state 193
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    TYPEDEF_NAME    shift, and go to state 2
    TYPEDEF         shift, and go to state 3
    EXTERN          shift, and go to state 4
    STATIC          shift, and go to state 5
    AUTO            shift, and go to state 6
    REGISTER        shift, and go to state 7
    VOID            shift, and go to state 8
    CHAR            shift, and go to state 9
    SHORT           shift, and go to state 10
    INT             shift, and go to state 11
    LONG            shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    SIGNED          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    BOOL            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    ENUM            shift, and go to state 20
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    INLINE          shift, and go to state 24
    NORETURN        shift, and go to state 25
    ALIGNAS         shift, and go to state 26
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 117
    RBRACE          shift, and go to state 194
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    IF              shift, and go to state 196
    WHILE           shift, and go to state 197
    GOTO            shift, and go to state 198
    BREAK           shift, and go to state 199
    CONTINUE        shift, and go to state 200
    FOR             shift, and go to state 201
    SWITCH          shift, and go to state 202
    CASE            shift, and go to state 203
    DEFAULT         shift, and go to state 204
    DO              shift, and go to state 205
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91
    RETURN          shift, and go to state 206

    block_item                 go to state 207
    compound_statement         go to state 208
    non_empty_block_item_list  go to state 209
    function_definition        go to state 210
    declaration                go to state 211
    declaration_specifiers     go to state 31
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38
    statement                  go to state 212
    selection_statement        go to state 213
    jump_statement             go to state 214
    iteration_statement        go to state 215
    conditional_statement      go to state 216
    switch_statement           go to state 217
    labeled_statement          go to state 218
    expression_statement       go to state 219
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 118

   23 init_declarator: declarator ASSIGN • initializer

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 221
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    initializer                go to state 222
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 223


State 119

    7 declaration_list: declaration_list • declaration
   17 function_definition: declaration_specifiers declarator declaration_list • compound_statement

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    LBRACE        shift, and go to state 117

    compound_statement         go to state 224
    declaration                go to state 225
    declaration_specifiers     go to state 122
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 120

   18 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 18 (function_definition)


State 121

    6 declaration_list: declaration •

    $default  reduce using rule 6 (declaration_list)


State 122

   19 declaration: declaration_specifiers • SEMICOLON
   20            | declaration_specifiers • init_declarator_list SEMICOLON
   30 declaration_specifiers: declaration_specifiers • storage_class_specifier
   31                       | declaration_specifiers • type_specifier
   32                       | declaration_specifiers • type_qualifier
   33                       | declaration_specifiers • function_specifier
   34                       | declaration_specifiers • alignment_specifier

    IDENTIFIER    shift, and go to state 48
    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    LPAREN        shift, and go to state 49
    SEMICOLON     shift, and go to state 50
    MULTIPLY      shift, and go to state 51

    init_declarator_list       go to state 52
    init_declarator            go to state 53
    storage_class_specifier    go to state 54
    type_specifier             go to state 55
    type_qualifier             go to state 56
    function_specifier         go to state 57
    alignment_specifier        go to state 58
    declarator                 go to state 192
    pointer                    go to state 60
    direct_declarator          go to state 61
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 123

   60 declarator: pointer direct_declarator •
   68 direct_declarator: direct_declarator • LSQBRACKET RSQBRACKET
   69                  | direct_declarator • LSQBRACKET assignment_expression RSQBRACKET
   70                  | direct_declarator • LPAREN RPAREN
   71                  | direct_declarator • LPAREN argument_expression_list RPAREN
   72                  | direct_declarator • LPAREN parameter_type_list RPAREN

    LPAREN      shift, and go to state 124
    LSQBRACKET  shift, and go to state 125

    $default  reduce using rule 60 (declarator)


State 124

   70 direct_declarator: direct_declarator LPAREN • RPAREN
   71                  | direct_declarator LPAREN • argument_expression_list RPAREN
   72                  | direct_declarator LPAREN • parameter_type_list RPAREN

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    TYPEDEF_NAME    shift, and go to state 2
    TYPEDEF         shift, and go to state 3
    EXTERN          shift, and go to state 4
    STATIC          shift, and go to state 5
    AUTO            shift, and go to state 6
    REGISTER        shift, and go to state 7
    VOID            shift, and go to state 8
    CHAR            shift, and go to state 9
    SHORT           shift, and go to state 10
    INT             shift, and go to state 11
    LONG            shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    SIGNED          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    BOOL            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    ENUM            shift, and go to state 20
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    INLINE          shift, and go to state 24
    NORETURN        shift, and go to state 25
    ALIGNAS         shift, and go to state 26
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    RPAREN          shift, and go to state 226
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    declaration_specifiers     go to state 227
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38
    parameter_type_list        go to state 228
    parameter_list             go to state 229
    parameter_declaration      go to state 230
    primary_expression         go to state 94
    postfix_expression         go to state 95
    argument_expression_list   go to state 231
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 232


State 125

   68 direct_declarator: direct_declarator LSQBRACKET • RSQBRACKET
   69                  | direct_declarator LSQBRACKET • assignment_expression RSQBRACKET

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    RSQBRACKET      shift, and go to state 233
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 234


State 126

   75 struct_or_union_specifier: STRUCT IDENTIFIER LBRACE RBRACE •

    $default  reduce using rule 75 (struct_or_union_specifier)


State 127

   76 struct_or_union_specifier: STRUCT IDENTIFIER LBRACE struct_declaration_list • RBRACE
   84 struct_declaration_list: struct_declaration_list • struct_declaration

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    ALIGNAS       shift, and go to state 26
    RBRACE        shift, and go to state 235

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    struct_declaration         go to state 132
    specifier_qualifier_list   go to state 69
    enum_specifier             go to state 38


State 128

   88 specifier_qualifier_list: type_specifier specifier_qualifier_list •

    $default  reduce using rule 88 (specifier_qualifier_list)


State 129

   90 specifier_qualifier_list: type_qualifier specifier_qualifier_list •

    $default  reduce using rule 90 (specifier_qualifier_list)


State 130

   92 specifier_qualifier_list: alignment_specifier specifier_qualifier_list •

    $default  reduce using rule 92 (specifier_qualifier_list)


State 131

   74 struct_or_union_specifier: STRUCT LBRACE struct_declaration_list RBRACE •

    $default  reduce using rule 74 (struct_or_union_specifier)


State 132

   84 struct_declaration_list: struct_declaration_list struct_declaration •

    $default  reduce using rule 84 (struct_declaration_list)


State 133

   85 struct_declaration: specifier_qualifier_list SEMICOLON •

    $default  reduce using rule 85 (struct_declaration)


State 134

   97 struct_declarator: COLON • constant_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 109
    constant_expression        go to state 236


State 135

   95 struct_declarator: declarator •
   96                  | declarator • COLON constant_expression

    COLON  shift, and go to state 237

    $default  reduce using rule 95 (struct_declarator)


State 136

   86 struct_declaration: specifier_qualifier_list struct_declarator_list • SEMICOLON
   94 struct_declarator_list: struct_declarator_list • COMMA struct_declarator

    SEMICOLON  shift, and go to state 238
    COMMA      shift, and go to state 239


State 137

   93 struct_declarator_list: struct_declarator •

    $default  reduce using rule 93 (struct_declarator_list)


State 138

   80 struct_or_union_specifier: UNION IDENTIFIER LBRACE RBRACE •

    $default  reduce using rule 80 (struct_or_union_specifier)


State 139

   81 struct_or_union_specifier: UNION IDENTIFIER LBRACE struct_declaration_list • RBRACE
   84 struct_declaration_list: struct_declaration_list • struct_declaration

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    ALIGNAS       shift, and go to state 26
    RBRACE        shift, and go to state 240

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    struct_declaration         go to state 132
    specifier_qualifier_list   go to state 69
    enum_specifier             go to state 38


State 140

   79 struct_or_union_specifier: UNION LBRACE struct_declaration_list RBRACE •

    $default  reduce using rule 79 (struct_or_union_specifier)


State 141

  100 enum_specifier: ENUM IDENTIFIER LBRACE RBRACE •

    $default  reduce using rule 100 (enum_specifier)


State 142

  101 enum_specifier: ENUM IDENTIFIER LBRACE enumerator_list • RBRACE
  104 enumerator_list: enumerator_list • COMMA enumeration_constant

    RBRACE  shift, and go to state 241
    COMMA   shift, and go to state 144


State 143

   99 enum_specifier: ENUM LBRACE enumerator_list RBRACE •

    $default  reduce using rule 99 (enum_specifier)


State 144

  104 enumerator_list: enumerator_list COMMA • enumeration_constant

    IDENTIFIER  shift, and go to state 74

    enumeration_constant  go to state 242


State 145

  158 primary_expression: LPAREN • expression RPAREN
  174 unary_expression: SIZEOF LPAREN • type_name RPAREN

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    TYPEDEF_NAME    shift, and go to state 2
    VOID            shift, and go to state 8
    CHAR            shift, and go to state 9
    SHORT           shift, and go to state 10
    INT             shift, and go to state 11
    LONG            shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    SIGNED          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    BOOL            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    ENUM            shift, and go to state 20
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    ALIGNAS         shift, and go to state 26
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    type_specifier             go to state 64
    type_qualifier             go to state 65
    alignment_specifier        go to state 66
    struct_or_union_specifier  go to state 37
    specifier_qualifier_list   go to state 92
    enum_specifier             go to state 38
    type_name                  go to state 243
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 151


State 146

  173 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 173 (unary_expression)


State 147

  182 cast_expression: LPAREN type_name • RPAREN cast_expression

    RPAREN  shift, and go to state 244


State 148

  181 cast_expression: unary_expression •
  214 assignment_expression: unary_expression • ASSIGN assignment_expression
  215                      | unary_expression • PLUS_ASSIGN assignment_expression
  216                      | unary_expression • MINUS_ASSIGN assignment_expression
  217                      | unary_expression • MUL_ASSIGN assignment_expression
  218                      | unary_expression • DIV_ASSIGN assignment_expression
  219                      | unary_expression • MOD_ASSIGN assignment_expression
  220                      | unary_expression • SHIFT_LEFT_ASSIGN assignment_expression
  221                      | unary_expression • SHIFT_RIGHT_ASSIGN assignment_expression
  222                      | unary_expression • BIT_AND_ASSIGN assignment_expression
  223                      | unary_expression • BIT_XOR_ASSIGN assignment_expression
  224                      | unary_expression • BIT_OR_ASSIGN assignment_expression

    ASSIGN              shift, and go to state 245
    PLUS_ASSIGN         shift, and go to state 246
    MINUS_ASSIGN        shift, and go to state 247
    MUL_ASSIGN          shift, and go to state 248
    DIV_ASSIGN          shift, and go to state 249
    MOD_ASSIGN          shift, and go to state 250
    SHIFT_LEFT_ASSIGN   shift, and go to state 251
    SHIFT_RIGHT_ASSIGN  shift, and go to state 252
    BIT_AND_ASSIGN      shift, and go to state 253
    BIT_XOR_ASSIGN      shift, and go to state 254
    BIT_OR_ASSIGN       shift, and go to state 255

    $default  reduce using rule 181 (cast_expression)


State 149

  213 assignment_expression: conditional_expression •

    $default  reduce using rule 213 (assignment_expression)


State 150

  225 expression: assignment_expression •

    $default  reduce using rule 225 (expression)


State 151

  158 primary_expression: LPAREN expression • RPAREN
  226 expression: expression • COMMA assignment_expression

    RPAREN  shift, and go to state 256
    COMMA   shift, and go to state 257


State 152

  158 primary_expression: LPAREN • expression RPAREN

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 151


State 153

  170 unary_expression: INCREMENT unary_expression •

    $default  reduce using rule 170 (unary_expression)


State 154

  171 unary_expression: DECREMENT unary_expression •

    $default  reduce using rule 171 (unary_expression)


State 155

  111 direct_abstract_declarator: LPAREN • abstract_declarator RPAREN
  115                           | LPAREN • parameter_type_list RPAREN

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    LPAREN        shift, and go to state 155
    LSQBRACKET    shift, and go to state 156
    MULTIPLY      shift, and go to state 51

    declaration_specifiers      go to state 227
    storage_class_specifier     go to state 32
    type_specifier              go to state 33
    type_qualifier              go to state 34
    function_specifier          go to state 35
    alignment_specifier         go to state 36
    pointer                     go to state 157
    struct_or_union_specifier   go to state 37
    enum_specifier              go to state 38
    abstract_declarator         go to state 258
    direct_abstract_declarator  go to state 159
    parameter_type_list         go to state 259
    parameter_list              go to state 229
    parameter_declaration       go to state 230


State 156

  112 direct_abstract_declarator: LSQBRACKET • RSQBRACKET
  113                           | LSQBRACKET • type_qualifier_list assignment_expression RSQBRACKET

    CONST       shift, and go to state 21
    RESTRICT    shift, and go to state 22
    VOLATILE    shift, and go to state 23
    RSQBRACKET  shift, and go to state 260

    type_qualifier_list  go to state 261
    type_qualifier       go to state 113


State 157

  108 abstract_declarator: pointer •
  109                    | pointer • direct_abstract_declarator

    LPAREN      shift, and go to state 155
    LSQBRACKET  shift, and go to state 156

    $default  reduce using rule 108 (abstract_declarator)

    direct_abstract_declarator  go to state 262


State 158

  107 type_name: specifier_qualifier_list abstract_declarator •

    $default  reduce using rule 107 (type_name)


State 159

  110 abstract_declarator: direct_abstract_declarator •
  114 direct_abstract_declarator: direct_abstract_declarator • LSQBRACKET assignment_expression RSQBRACKET
  116                           | direct_abstract_declarator • LPAREN parameter_type_list RPAREN

    LPAREN      shift, and go to state 263
    LSQBRACKET  shift, and go to state 264

    $default  reduce using rule 110 (abstract_declarator)


State 160

   58 alignment_specifier: ALIGNAS LPAREN type_name RPAREN •

    $default  reduce using rule 58 (alignment_specifier)


State 161

  163 postfix_expression: postfix_expression LPAREN • argument_expression_list RPAREN
  164                   | postfix_expression LPAREN • RPAREN

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    RPAREN          shift, and go to state 265
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    argument_expression_list   go to state 266
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 232


State 162

  160 postfix_expression: postfix_expression LSQBRACKET • expression RSQBRACKET

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 267


State 163

  161 postfix_expression: postfix_expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 268


State 164

  162 postfix_expression: postfix_expression ARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 269


State 165

  165 postfix_expression: postfix_expression INCREMENT •

    $default  reduce using rule 165 (postfix_expression)


State 166

  166 postfix_expression: postfix_expression DECREMENT •

    $default  reduce using rule 166 (postfix_expression)


State 167

  172 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 172 (unary_expression)


State 168

  184 multiplicative_expression: multiplicative_expression MULTIPLY • cast_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression  go to state 94
    postfix_expression  go to state 95
    unary_expression    go to state 96
    unary_operator      go to state 97
    cast_expression     go to state 270


State 169

  185 multiplicative_expression: multiplicative_expression DIVIDE • cast_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression  go to state 94
    postfix_expression  go to state 95
    unary_expression    go to state 96
    unary_operator      go to state 97
    cast_expression     go to state 271


State 170

  186 multiplicative_expression: multiplicative_expression MODULO • cast_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression  go to state 94
    postfix_expression  go to state 95
    unary_expression    go to state 96
    unary_operator      go to state 97
    cast_expression     go to state 272


State 171

  188 additive_expression: additive_expression PLUS • multiplicative_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 273


State 172

  189 additive_expression: additive_expression MINUS • multiplicative_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 274


State 173

  191 shift_expression: shift_expression SHIFT_LEFT • additive_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 275


State 174

  192 shift_expression: shift_expression SHIFT_RIGHT • additive_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 276


State 175

  194 relational_expression: relational_expression LESS • shift_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 277


State 176

  195 relational_expression: relational_expression GREATER • shift_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 278


State 177

  196 relational_expression: relational_expression LESS_EQUAL • shift_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 279


State 178

  197 relational_expression: relational_expression GREATER_EQUAL • shift_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 280


State 179

  199 equality_expression: equality_expression EQUAL • relational_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 281


State 180

  200 equality_expression: equality_expression NOT_EQUAL • relational_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 282


State 181

  202 and_expression: and_expression BIT_AND • equality_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 283


State 182

  204 exclusive_or_expression: exclusive_or_expression BIT_XOR • and_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 284


State 183

  206 inclusive_or_expression: inclusive_or_expression BIT_OR • exclusive_or_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 285


State 184

  208 logical_and_expression: logical_and_expression AND • inclusive_or_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 286


State 185

  212 conditional_expression: logical_or_expression QUESTION • expression COLON conditional_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 287


State 186

  210 logical_or_expression: logical_or_expression OR • logical_and_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 288


State 187

   59 alignment_specifier: ALIGNAS LPAREN constant_expression RPAREN •

    $default  reduce using rule 59 (alignment_specifier)


State 188

   67 direct_declarator: LPAREN declarator RPAREN •

    $default  reduce using rule 67 (direct_declarator)


State 189

   12 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 12 (type_qualifier_list)


State 190

   65 pointer: MULTIPLY type_qualifier_list pointer •

    $default  reduce using rule 65 (pointer)


State 191

   22 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 22 (init_declarator_list)


State 192

   23 init_declarator: declarator • ASSIGN initializer
   24                | declarator •

    ASSIGN  shift, and go to state 118

    $default  reduce using rule 24 (init_declarator)


State 193

  148 labeled_statement: IDENTIFIER • COLON statement
  154 primary_expression: IDENTIFIER •

    COLON  shift, and go to state 289

    $default  reduce using rule 154 (primary_expression)


State 194

   13 compound_statement: LBRACE RBRACE •

    $default  reduce using rule 13 (compound_statement)


State 195

  152 expression_statement: SEMICOLON •

    $default  reduce using rule 152 (expression_statement)


State 196

  145 conditional_statement: IF • LPAREN expression RPAREN statement
  146                      | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 290


State 197

  143 iteration_statement: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 291


State 198

  141 jump_statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 292


State 199

  139 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 293


State 200

  140 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 294


State 201

  144 iteration_statement: FOR • LPAREN type_specifier expression_statement expression_statement expression_opt RPAREN statement

    LPAREN  shift, and go to state 295


State 202

  147 switch_statement: SWITCH • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 296


State 203

  149 labeled_statement: CASE • constant_expression COLON statement

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 109
    constant_expression        go to state 297


State 204

  150 labeled_statement: DEFAULT • COLON statement

    COLON  shift, and go to state 298


State 205

  142 iteration_statement: DO • statement WHILE LPAREN expression RPAREN SEMICOLON

    IDENTIFIER      shift, and go to state 193
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 117
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    IF              shift, and go to state 196
    WHILE           shift, and go to state 197
    GOTO            shift, and go to state 198
    BREAK           shift, and go to state 199
    CONTINUE        shift, and go to state 200
    FOR             shift, and go to state 201
    SWITCH          shift, and go to state 202
    CASE            shift, and go to state 203
    DEFAULT         shift, and go to state 204
    DO              shift, and go to state 205
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91
    RETURN          shift, and go to state 206

    compound_statement         go to state 208
    statement                  go to state 299
    selection_statement        go to state 213
    jump_statement             go to state 214
    iteration_statement        go to state 215
    conditional_statement      go to state 216
    switch_statement           go to state 217
    labeled_statement          go to state 218
    expression_statement       go to state 219
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 206

  137 jump_statement: RETURN • expression SEMICOLON
  138               | RETURN • SEMICOLON

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    SEMICOLON       shift, and go to state 300
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 301


State 207

   15 non_empty_block_item_list: block_item •

    $default  reduce using rule 15 (non_empty_block_item_list)


State 208

  133 statement: compound_statement •

    $default  reduce using rule 133 (statement)


State 209

   14 compound_statement: LBRACE non_empty_block_item_list • RBRACE
   16 non_empty_block_item_list: non_empty_block_item_list • block_item

    IDENTIFIER      shift, and go to state 193
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    TYPEDEF_NAME    shift, and go to state 2
    TYPEDEF         shift, and go to state 3
    EXTERN          shift, and go to state 4
    STATIC          shift, and go to state 5
    AUTO            shift, and go to state 6
    REGISTER        shift, and go to state 7
    VOID            shift, and go to state 8
    CHAR            shift, and go to state 9
    SHORT           shift, and go to state 10
    INT             shift, and go to state 11
    LONG            shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    SIGNED          shift, and go to state 15
    UNSIGNED        shift, and go to state 16
    BOOL            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    ENUM            shift, and go to state 20
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    INLINE          shift, and go to state 24
    NORETURN        shift, and go to state 25
    ALIGNAS         shift, and go to state 26
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 117
    RBRACE          shift, and go to state 302
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    IF              shift, and go to state 196
    WHILE           shift, and go to state 197
    GOTO            shift, and go to state 198
    BREAK           shift, and go to state 199
    CONTINUE        shift, and go to state 200
    FOR             shift, and go to state 201
    SWITCH          shift, and go to state 202
    CASE            shift, and go to state 203
    DEFAULT         shift, and go to state 204
    DO              shift, and go to state 205
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91
    RETURN          shift, and go to state 206

    block_item                 go to state 303
    compound_statement         go to state 208
    function_definition        go to state 210
    declaration                go to state 211
    declaration_specifiers     go to state 31
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38
    statement                  go to state 212
    selection_statement        go to state 213
    jump_statement             go to state 214
    iteration_statement        go to state 215
    conditional_statement      go to state 216
    switch_statement           go to state 217
    labeled_statement          go to state 218
    expression_statement       go to state 219
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 210

   10 block_item: function_definition •

    $default  reduce using rule 10 (block_item)


State 211

    8 block_item: declaration •

    $default  reduce using rule 8 (block_item)


State 212

    9 block_item: statement •

    $default  reduce using rule 9 (block_item)


State 213

  130 statement: selection_statement •

    $default  reduce using rule 130 (statement)


State 214

  132 statement: jump_statement •

    $default  reduce using rule 132 (statement)


State 215

  131 statement: iteration_statement •

    $default  reduce using rule 131 (statement)


State 216

  135 selection_statement: conditional_statement •

    $default  reduce using rule 135 (selection_statement)


State 217

  136 selection_statement: switch_statement •

    $default  reduce using rule 136 (selection_statement)


State 218

  134 statement: labeled_statement •

    $default  reduce using rule 134 (statement)


State 219

  129 statement: expression_statement •

    $default  reduce using rule 129 (statement)


State 220

  153 expression_statement: expression • SEMICOLON
  226 expression: expression • COMMA assignment_expression

    SEMICOLON  shift, and go to state 304
    COMMA      shift, and go to state 257


State 221

  125 initializer: LBRACE • initializer_list RBRACE
  126            | LBRACE • initializer_list COMMA RBRACE

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 221
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    initializer                go to state 305
    initializer_list           go to state 306
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 223


State 222

   23 init_declarator: declarator ASSIGN initializer •

    $default  reduce using rule 23 (init_declarator)


State 223

  124 initializer: assignment_expression •

    $default  reduce using rule 124 (initializer)


State 224

   17 function_definition: declaration_specifiers declarator declaration_list compound_statement •

    $default  reduce using rule 17 (function_definition)


State 225

    7 declaration_list: declaration_list declaration •

    $default  reduce using rule 7 (declaration_list)


State 226

   70 direct_declarator: direct_declarator LPAREN RPAREN •

    $default  reduce using rule 70 (direct_declarator)


State 227

   30 declaration_specifiers: declaration_specifiers • storage_class_specifier
   31                       | declaration_specifiers • type_specifier
   32                       | declaration_specifiers • type_qualifier
   33                       | declaration_specifiers • function_specifier
   34                       | declaration_specifiers • alignment_specifier
  121 parameter_declaration: declaration_specifiers • declarator
  122                      | declaration_specifiers • abstract_declarator
  123                      | declaration_specifiers •

    IDENTIFIER    shift, and go to state 48
    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    LPAREN        shift, and go to state 307
    LSQBRACKET    shift, and go to state 156
    MULTIPLY      shift, and go to state 51

    $default  reduce using rule 123 (parameter_declaration)

    storage_class_specifier     go to state 54
    type_specifier              go to state 55
    type_qualifier              go to state 56
    function_specifier          go to state 57
    alignment_specifier         go to state 58
    declarator                  go to state 308
    pointer                     go to state 309
    direct_declarator           go to state 61
    struct_or_union_specifier   go to state 37
    enum_specifier              go to state 38
    abstract_declarator         go to state 310
    direct_abstract_declarator  go to state 159


State 228

   72 direct_declarator: direct_declarator LPAREN parameter_type_list • RPAREN

    RPAREN  shift, and go to state 311


State 229

  117 parameter_type_list: parameter_list •
  118                    | parameter_list • COMMA ELLIPSIS
  120 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 312

    $default  reduce using rule 117 (parameter_type_list)


State 230

  119 parameter_list: parameter_declaration •

    $default  reduce using rule 119 (parameter_list)


State 231

   71 direct_declarator: direct_declarator LPAREN argument_expression_list • RPAREN
  168 argument_expression_list: argument_expression_list • COMMA assignment_expression

    RPAREN  shift, and go to state 313
    COMMA   shift, and go to state 314


State 232

  167 argument_expression_list: assignment_expression •

    $default  reduce using rule 167 (argument_expression_list)


State 233

   68 direct_declarator: direct_declarator LSQBRACKET RSQBRACKET •

    $default  reduce using rule 68 (direct_declarator)


State 234

   69 direct_declarator: direct_declarator LSQBRACKET assignment_expression • RSQBRACKET

    RSQBRACKET  shift, and go to state 315


State 235

   76 struct_or_union_specifier: STRUCT IDENTIFIER LBRACE struct_declaration_list RBRACE •

    $default  reduce using rule 76 (struct_or_union_specifier)


State 236

   97 struct_declarator: COLON constant_expression •

    $default  reduce using rule 97 (struct_declarator)


State 237

   96 struct_declarator: declarator COLON • constant_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 109
    constant_expression        go to state 316


State 238

   86 struct_declaration: specifier_qualifier_list struct_declarator_list SEMICOLON •

    $default  reduce using rule 86 (struct_declaration)


State 239

   94 struct_declarator_list: struct_declarator_list COMMA • struct_declarator

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 49
    COLON       shift, and go to state 134
    MULTIPLY    shift, and go to state 51

    declarator         go to state 135
    pointer            go to state 60
    direct_declarator  go to state 61
    struct_declarator  go to state 317


State 240

   81 struct_or_union_specifier: UNION IDENTIFIER LBRACE struct_declaration_list RBRACE •

    $default  reduce using rule 81 (struct_or_union_specifier)


State 241

  101 enum_specifier: ENUM IDENTIFIER LBRACE enumerator_list RBRACE •

    $default  reduce using rule 101 (enum_specifier)


State 242

  104 enumerator_list: enumerator_list COMMA enumeration_constant •

    $default  reduce using rule 104 (enumerator_list)


State 243

  174 unary_expression: SIZEOF LPAREN type_name • RPAREN

    RPAREN  shift, and go to state 318


State 244

  182 cast_expression: LPAREN type_name RPAREN • cast_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression  go to state 94
    postfix_expression  go to state 95
    unary_expression    go to state 96
    unary_operator      go to state 97
    cast_expression     go to state 319


State 245

  214 assignment_expression: unary_expression ASSIGN • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 320


State 246

  215 assignment_expression: unary_expression PLUS_ASSIGN • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 321


State 247

  216 assignment_expression: unary_expression MINUS_ASSIGN • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 322


State 248

  217 assignment_expression: unary_expression MUL_ASSIGN • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 323


State 249

  218 assignment_expression: unary_expression DIV_ASSIGN • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 324


State 250

  219 assignment_expression: unary_expression MOD_ASSIGN • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 325


State 251

  220 assignment_expression: unary_expression SHIFT_LEFT_ASSIGN • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 326


State 252

  221 assignment_expression: unary_expression SHIFT_RIGHT_ASSIGN • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 327


State 253

  222 assignment_expression: unary_expression BIT_AND_ASSIGN • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 328


State 254

  223 assignment_expression: unary_expression BIT_XOR_ASSIGN • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 329


State 255

  224 assignment_expression: unary_expression BIT_OR_ASSIGN • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 330


State 256

  158 primary_expression: LPAREN expression RPAREN •

    $default  reduce using rule 158 (primary_expression)


State 257

  226 expression: expression COMMA • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 331


State 258

  111 direct_abstract_declarator: LPAREN abstract_declarator • RPAREN

    RPAREN  shift, and go to state 332


State 259

  115 direct_abstract_declarator: LPAREN parameter_type_list • RPAREN

    RPAREN  shift, and go to state 333


State 260

  112 direct_abstract_declarator: LSQBRACKET RSQBRACKET •

    $default  reduce using rule 112 (direct_abstract_declarator)


State 261

   12 type_qualifier_list: type_qualifier_list • type_qualifier
  113 direct_abstract_declarator: LSQBRACKET type_qualifier_list • assignment_expression RSQBRACKET

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    CONST           shift, and go to state 21
    RESTRICT        shift, and go to state 22
    VOLATILE        shift, and go to state 23
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    type_qualifier             go to state 189
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 334


State 262

  109 abstract_declarator: pointer direct_abstract_declarator •
  114 direct_abstract_declarator: direct_abstract_declarator • LSQBRACKET assignment_expression RSQBRACKET
  116                           | direct_abstract_declarator • LPAREN parameter_type_list RPAREN

    LPAREN      shift, and go to state 263
    LSQBRACKET  shift, and go to state 264

    $default  reduce using rule 109 (abstract_declarator)


State 263

  116 direct_abstract_declarator: direct_abstract_declarator LPAREN • parameter_type_list RPAREN

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26

    declaration_specifiers     go to state 227
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38
    parameter_type_list        go to state 335
    parameter_list             go to state 229
    parameter_declaration      go to state 230


State 264

  114 direct_abstract_declarator: direct_abstract_declarator LSQBRACKET • assignment_expression RSQBRACKET

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 336


State 265

  164 postfix_expression: postfix_expression LPAREN RPAREN •

    $default  reduce using rule 164 (postfix_expression)


State 266

  163 postfix_expression: postfix_expression LPAREN argument_expression_list • RPAREN
  168 argument_expression_list: argument_expression_list • COMMA assignment_expression

    RPAREN  shift, and go to state 337
    COMMA   shift, and go to state 314


State 267

  160 postfix_expression: postfix_expression LSQBRACKET expression • RSQBRACKET
  226 expression: expression • COMMA assignment_expression

    RSQBRACKET  shift, and go to state 338
    COMMA       shift, and go to state 257


State 268

  161 postfix_expression: postfix_expression DOT IDENTIFIER •

    $default  reduce using rule 161 (postfix_expression)


State 269

  162 postfix_expression: postfix_expression ARROW IDENTIFIER •

    $default  reduce using rule 162 (postfix_expression)


State 270

  184 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression •

    $default  reduce using rule 184 (multiplicative_expression)


State 271

  185 multiplicative_expression: multiplicative_expression DIVIDE cast_expression •

    $default  reduce using rule 185 (multiplicative_expression)


State 272

  186 multiplicative_expression: multiplicative_expression MODULO cast_expression •

    $default  reduce using rule 186 (multiplicative_expression)


State 273

  184 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
  185                          | multiplicative_expression • DIVIDE cast_expression
  186                          | multiplicative_expression • MODULO cast_expression
  188 additive_expression: additive_expression PLUS multiplicative_expression •

    MULTIPLY  shift, and go to state 168
    DIVIDE    shift, and go to state 169
    MODULO    shift, and go to state 170

    $default  reduce using rule 188 (additive_expression)


State 274

  184 multiplicative_expression: multiplicative_expression • MULTIPLY cast_expression
  185                          | multiplicative_expression • DIVIDE cast_expression
  186                          | multiplicative_expression • MODULO cast_expression
  189 additive_expression: additive_expression MINUS multiplicative_expression •

    MULTIPLY  shift, and go to state 168
    DIVIDE    shift, and go to state 169
    MODULO    shift, and go to state 170

    $default  reduce using rule 189 (additive_expression)


State 275

  188 additive_expression: additive_expression • PLUS multiplicative_expression
  189                    | additive_expression • MINUS multiplicative_expression
  191 shift_expression: shift_expression SHIFT_LEFT additive_expression •

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172

    $default  reduce using rule 191 (shift_expression)


State 276

  188 additive_expression: additive_expression • PLUS multiplicative_expression
  189                    | additive_expression • MINUS multiplicative_expression
  192 shift_expression: shift_expression SHIFT_RIGHT additive_expression •

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172

    $default  reduce using rule 192 (shift_expression)


State 277

  191 shift_expression: shift_expression • SHIFT_LEFT additive_expression
  192                 | shift_expression • SHIFT_RIGHT additive_expression
  194 relational_expression: relational_expression LESS shift_expression •

    SHIFT_LEFT   shift, and go to state 173
    SHIFT_RIGHT  shift, and go to state 174

    $default  reduce using rule 194 (relational_expression)


State 278

  191 shift_expression: shift_expression • SHIFT_LEFT additive_expression
  192                 | shift_expression • SHIFT_RIGHT additive_expression
  195 relational_expression: relational_expression GREATER shift_expression •

    SHIFT_LEFT   shift, and go to state 173
    SHIFT_RIGHT  shift, and go to state 174

    $default  reduce using rule 195 (relational_expression)


State 279

  191 shift_expression: shift_expression • SHIFT_LEFT additive_expression
  192                 | shift_expression • SHIFT_RIGHT additive_expression
  196 relational_expression: relational_expression LESS_EQUAL shift_expression •

    SHIFT_LEFT   shift, and go to state 173
    SHIFT_RIGHT  shift, and go to state 174

    $default  reduce using rule 196 (relational_expression)


State 280

  191 shift_expression: shift_expression • SHIFT_LEFT additive_expression
  192                 | shift_expression • SHIFT_RIGHT additive_expression
  197 relational_expression: relational_expression GREATER_EQUAL shift_expression •

    SHIFT_LEFT   shift, and go to state 173
    SHIFT_RIGHT  shift, and go to state 174

    $default  reduce using rule 197 (relational_expression)


State 281

  194 relational_expression: relational_expression • LESS shift_expression
  195                      | relational_expression • GREATER shift_expression
  196                      | relational_expression • LESS_EQUAL shift_expression
  197                      | relational_expression • GREATER_EQUAL shift_expression
  199 equality_expression: equality_expression EQUAL relational_expression •

    LESS           shift, and go to state 175
    GREATER        shift, and go to state 176
    LESS_EQUAL     shift, and go to state 177
    GREATER_EQUAL  shift, and go to state 178

    $default  reduce using rule 199 (equality_expression)


State 282

  194 relational_expression: relational_expression • LESS shift_expression
  195                      | relational_expression • GREATER shift_expression
  196                      | relational_expression • LESS_EQUAL shift_expression
  197                      | relational_expression • GREATER_EQUAL shift_expression
  200 equality_expression: equality_expression NOT_EQUAL relational_expression •

    LESS           shift, and go to state 175
    GREATER        shift, and go to state 176
    LESS_EQUAL     shift, and go to state 177
    GREATER_EQUAL  shift, and go to state 178

    $default  reduce using rule 200 (equality_expression)


State 283

  199 equality_expression: equality_expression • EQUAL relational_expression
  200                    | equality_expression • NOT_EQUAL relational_expression
  202 and_expression: and_expression BIT_AND equality_expression •

    EQUAL      shift, and go to state 179
    NOT_EQUAL  shift, and go to state 180

    $default  reduce using rule 202 (and_expression)


State 284

  202 and_expression: and_expression • BIT_AND equality_expression
  204 exclusive_or_expression: exclusive_or_expression BIT_XOR and_expression •

    BIT_AND  shift, and go to state 181

    $default  reduce using rule 204 (exclusive_or_expression)


State 285

  204 exclusive_or_expression: exclusive_or_expression • BIT_XOR and_expression
  206 inclusive_or_expression: inclusive_or_expression BIT_OR exclusive_or_expression •

    BIT_XOR  shift, and go to state 182

    $default  reduce using rule 206 (inclusive_or_expression)


State 286

  206 inclusive_or_expression: inclusive_or_expression • BIT_OR exclusive_or_expression
  208 logical_and_expression: logical_and_expression AND inclusive_or_expression •

    BIT_OR  shift, and go to state 183

    $default  reduce using rule 208 (logical_and_expression)


State 287

  212 conditional_expression: logical_or_expression QUESTION expression • COLON conditional_expression
  226 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 257
    COLON  shift, and go to state 339


State 288

  208 logical_and_expression: logical_and_expression • AND inclusive_or_expression
  210 logical_or_expression: logical_or_expression OR logical_and_expression •

    AND  shift, and go to state 184

    $default  reduce using rule 210 (logical_or_expression)


State 289

  148 labeled_statement: IDENTIFIER COLON • statement

    IDENTIFIER      shift, and go to state 193
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 117
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    IF              shift, and go to state 196
    WHILE           shift, and go to state 197
    GOTO            shift, and go to state 198
    BREAK           shift, and go to state 199
    CONTINUE        shift, and go to state 200
    FOR             shift, and go to state 201
    SWITCH          shift, and go to state 202
    CASE            shift, and go to state 203
    DEFAULT         shift, and go to state 204
    DO              shift, and go to state 205
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91
    RETURN          shift, and go to state 206

    compound_statement         go to state 208
    statement                  go to state 340
    selection_statement        go to state 213
    jump_statement             go to state 214
    iteration_statement        go to state 215
    conditional_statement      go to state 216
    switch_statement           go to state 217
    labeled_statement          go to state 218
    expression_statement       go to state 219
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 290

  145 conditional_statement: IF LPAREN • expression RPAREN statement
  146                      | IF LPAREN • expression RPAREN statement ELSE statement

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 341


State 291

  143 iteration_statement: WHILE LPAREN • expression RPAREN statement

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 342


State 292

  141 jump_statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 343


State 293

  139 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 139 (jump_statement)


State 294

  140 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 140 (jump_statement)


State 295

  144 iteration_statement: FOR LPAREN • type_specifier expression_statement expression_statement expression_opt RPAREN statement

    TYPEDEF_NAME  shift, and go to state 2
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20

    type_specifier             go to state 344
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38


State 296

  147 switch_statement: SWITCH LPAREN • expression RPAREN statement

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 345


State 297

  149 labeled_statement: CASE constant_expression • COLON statement

    COLON  shift, and go to state 346


State 298

  150 labeled_statement: DEFAULT COLON • statement

    IDENTIFIER      shift, and go to state 193
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 117
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    IF              shift, and go to state 196
    WHILE           shift, and go to state 197
    GOTO            shift, and go to state 198
    BREAK           shift, and go to state 199
    CONTINUE        shift, and go to state 200
    FOR             shift, and go to state 201
    SWITCH          shift, and go to state 202
    CASE            shift, and go to state 203
    DEFAULT         shift, and go to state 204
    DO              shift, and go to state 205
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91
    RETURN          shift, and go to state 206

    compound_statement         go to state 208
    statement                  go to state 347
    selection_statement        go to state 213
    jump_statement             go to state 214
    iteration_statement        go to state 215
    conditional_statement      go to state 216
    switch_statement           go to state 217
    labeled_statement          go to state 218
    expression_statement       go to state 219
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 299

  142 iteration_statement: DO statement • WHILE LPAREN expression RPAREN SEMICOLON

    WHILE  shift, and go to state 348


State 300

  138 jump_statement: RETURN SEMICOLON •

    $default  reduce using rule 138 (jump_statement)


State 301

  137 jump_statement: RETURN expression • SEMICOLON
  226 expression: expression • COMMA assignment_expression

    SEMICOLON  shift, and go to state 349
    COMMA      shift, and go to state 257


State 302

   14 compound_statement: LBRACE non_empty_block_item_list RBRACE •

    $default  reduce using rule 14 (compound_statement)


State 303

   16 non_empty_block_item_list: non_empty_block_item_list block_item •

    $default  reduce using rule 16 (non_empty_block_item_list)


State 304

  153 expression_statement: expression SEMICOLON •

    $default  reduce using rule 153 (expression_statement)


State 305

  127 initializer_list: initializer •

    $default  reduce using rule 127 (initializer_list)


State 306

  125 initializer: LBRACE initializer_list • RBRACE
  126            | LBRACE initializer_list • COMMA RBRACE
  128 initializer_list: initializer_list • COMMA initializer

    RBRACE  shift, and go to state 350
    COMMA   shift, and go to state 351


State 307

   67 direct_declarator: LPAREN • declarator RPAREN
  111 direct_abstract_declarator: LPAREN • abstract_declarator RPAREN
  115                           | LPAREN • parameter_type_list RPAREN

    IDENTIFIER    shift, and go to state 48
    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    LPAREN        shift, and go to state 307
    LSQBRACKET    shift, and go to state 156
    MULTIPLY      shift, and go to state 51

    declaration_specifiers      go to state 227
    storage_class_specifier     go to state 32
    type_specifier              go to state 33
    type_qualifier              go to state 34
    function_specifier          go to state 35
    alignment_specifier         go to state 36
    declarator                  go to state 111
    pointer                     go to state 309
    direct_declarator           go to state 61
    struct_or_union_specifier   go to state 37
    enum_specifier              go to state 38
    abstract_declarator         go to state 258
    direct_abstract_declarator  go to state 159
    parameter_type_list         go to state 259
    parameter_list              go to state 229
    parameter_declaration       go to state 230


State 308

  121 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 121 (parameter_declaration)


State 309

   60 declarator: pointer • direct_declarator
  108 abstract_declarator: pointer •
  109                    | pointer • direct_abstract_declarator

    IDENTIFIER  shift, and go to state 48
    LPAREN      shift, and go to state 307
    LSQBRACKET  shift, and go to state 156

    $default  reduce using rule 108 (abstract_declarator)

    direct_declarator           go to state 123
    direct_abstract_declarator  go to state 262


State 310

  122 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 122 (parameter_declaration)


State 311

   72 direct_declarator: direct_declarator LPAREN parameter_type_list RPAREN •

    $default  reduce using rule 72 (direct_declarator)


State 312

  118 parameter_type_list: parameter_list COMMA • ELLIPSIS
  120 parameter_list: parameter_list COMMA • parameter_declaration

    TYPEDEF_NAME  shift, and go to state 2
    TYPEDEF       shift, and go to state 3
    EXTERN        shift, and go to state 4
    STATIC        shift, and go to state 5
    AUTO          shift, and go to state 6
    REGISTER      shift, and go to state 7
    VOID          shift, and go to state 8
    CHAR          shift, and go to state 9
    SHORT         shift, and go to state 10
    INT           shift, and go to state 11
    LONG          shift, and go to state 12
    FLOAT         shift, and go to state 13
    DOUBLE        shift, and go to state 14
    SIGNED        shift, and go to state 15
    UNSIGNED      shift, and go to state 16
    BOOL          shift, and go to state 17
    STRUCT        shift, and go to state 18
    UNION         shift, and go to state 19
    ENUM          shift, and go to state 20
    CONST         shift, and go to state 21
    RESTRICT      shift, and go to state 22
    VOLATILE      shift, and go to state 23
    INLINE        shift, and go to state 24
    NORETURN      shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    ELLIPSIS      shift, and go to state 352

    declaration_specifiers     go to state 227
    storage_class_specifier    go to state 32
    type_specifier             go to state 33
    type_qualifier             go to state 34
    function_specifier         go to state 35
    alignment_specifier        go to state 36
    struct_or_union_specifier  go to state 37
    enum_specifier             go to state 38
    parameter_declaration      go to state 353


State 313

   71 direct_declarator: direct_declarator LPAREN argument_expression_list RPAREN •

    $default  reduce using rule 71 (direct_declarator)


State 314

  168 argument_expression_list: argument_expression_list COMMA • assignment_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 354


State 315

   69 direct_declarator: direct_declarator LSQBRACKET assignment_expression RSQBRACKET •

    $default  reduce using rule 69 (direct_declarator)


State 316

   96 struct_declarator: declarator COLON constant_expression •

    $default  reduce using rule 96 (struct_declarator)


State 317

   94 struct_declarator_list: struct_declarator_list COMMA struct_declarator •

    $default  reduce using rule 94 (struct_declarator_list)


State 318

  174 unary_expression: SIZEOF LPAREN type_name RPAREN •

    $default  reduce using rule 174 (unary_expression)


State 319

  182 cast_expression: LPAREN type_name RPAREN cast_expression •

    $default  reduce using rule 182 (cast_expression)


State 320

  214 assignment_expression: unary_expression ASSIGN assignment_expression •

    $default  reduce using rule 214 (assignment_expression)


State 321

  215 assignment_expression: unary_expression PLUS_ASSIGN assignment_expression •

    $default  reduce using rule 215 (assignment_expression)


State 322

  216 assignment_expression: unary_expression MINUS_ASSIGN assignment_expression •

    $default  reduce using rule 216 (assignment_expression)


State 323

  217 assignment_expression: unary_expression MUL_ASSIGN assignment_expression •

    $default  reduce using rule 217 (assignment_expression)


State 324

  218 assignment_expression: unary_expression DIV_ASSIGN assignment_expression •

    $default  reduce using rule 218 (assignment_expression)


State 325

  219 assignment_expression: unary_expression MOD_ASSIGN assignment_expression •

    $default  reduce using rule 219 (assignment_expression)


State 326

  220 assignment_expression: unary_expression SHIFT_LEFT_ASSIGN assignment_expression •

    $default  reduce using rule 220 (assignment_expression)


State 327

  221 assignment_expression: unary_expression SHIFT_RIGHT_ASSIGN assignment_expression •

    $default  reduce using rule 221 (assignment_expression)


State 328

  222 assignment_expression: unary_expression BIT_AND_ASSIGN assignment_expression •

    $default  reduce using rule 222 (assignment_expression)


State 329

  223 assignment_expression: unary_expression BIT_XOR_ASSIGN assignment_expression •

    $default  reduce using rule 223 (assignment_expression)


State 330

  224 assignment_expression: unary_expression BIT_OR_ASSIGN assignment_expression •

    $default  reduce using rule 224 (assignment_expression)


State 331

  226 expression: expression COMMA assignment_expression •

    $default  reduce using rule 226 (expression)


State 332

  111 direct_abstract_declarator: LPAREN abstract_declarator RPAREN •

    $default  reduce using rule 111 (direct_abstract_declarator)


State 333

  115 direct_abstract_declarator: LPAREN parameter_type_list RPAREN •

    $default  reduce using rule 115 (direct_abstract_declarator)


State 334

  113 direct_abstract_declarator: LSQBRACKET type_qualifier_list assignment_expression • RSQBRACKET

    RSQBRACKET  shift, and go to state 355


State 335

  116 direct_abstract_declarator: direct_abstract_declarator LPAREN parameter_type_list • RPAREN

    RPAREN  shift, and go to state 356


State 336

  114 direct_abstract_declarator: direct_abstract_declarator LSQBRACKET assignment_expression • RSQBRACKET

    RSQBRACKET  shift, and go to state 357


State 337

  163 postfix_expression: postfix_expression LPAREN argument_expression_list RPAREN •

    $default  reduce using rule 163 (postfix_expression)


State 338

  160 postfix_expression: postfix_expression LSQBRACKET expression RSQBRACKET •

    $default  reduce using rule 160 (postfix_expression)


State 339

  212 conditional_expression: logical_or_expression QUESTION expression COLON • conditional_expression

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 96
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 358


State 340

  148 labeled_statement: IDENTIFIER COLON statement •

    $default  reduce using rule 148 (labeled_statement)


State 341

  145 conditional_statement: IF LPAREN expression • RPAREN statement
  146                      | IF LPAREN expression • RPAREN statement ELSE statement
  226 expression: expression • COMMA assignment_expression

    RPAREN  shift, and go to state 359
    COMMA   shift, and go to state 257


State 342

  143 iteration_statement: WHILE LPAREN expression • RPAREN statement
  226 expression: expression • COMMA assignment_expression

    RPAREN  shift, and go to state 360
    COMMA   shift, and go to state 257


State 343

  141 jump_statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 141 (jump_statement)


State 344

  144 iteration_statement: FOR LPAREN type_specifier • expression_statement expression_statement expression_opt RPAREN statement

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    expression_statement       go to state 361
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 345

  147 switch_statement: SWITCH LPAREN expression • RPAREN statement
  226 expression: expression • COMMA assignment_expression

    RPAREN  shift, and go to state 362
    COMMA   shift, and go to state 257


State 346

  149 labeled_statement: CASE constant_expression COLON • statement

    IDENTIFIER      shift, and go to state 193
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 117
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    IF              shift, and go to state 196
    WHILE           shift, and go to state 197
    GOTO            shift, and go to state 198
    BREAK           shift, and go to state 199
    CONTINUE        shift, and go to state 200
    FOR             shift, and go to state 201
    SWITCH          shift, and go to state 202
    CASE            shift, and go to state 203
    DEFAULT         shift, and go to state 204
    DO              shift, and go to state 205
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91
    RETURN          shift, and go to state 206

    compound_statement         go to state 208
    statement                  go to state 363
    selection_statement        go to state 213
    jump_statement             go to state 214
    iteration_statement        go to state 215
    conditional_statement      go to state 216
    switch_statement           go to state 217
    labeled_statement          go to state 218
    expression_statement       go to state 219
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 347

  150 labeled_statement: DEFAULT COLON statement •

    $default  reduce using rule 150 (labeled_statement)


State 348

  142 iteration_statement: DO statement WHILE • LPAREN expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 364


State 349

  137 jump_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 137 (jump_statement)


State 350

  125 initializer: LBRACE initializer_list RBRACE •

    $default  reduce using rule 125 (initializer)


State 351

  126 initializer: LBRACE initializer_list COMMA • RBRACE
  128 initializer_list: initializer_list COMMA • initializer

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 221
    RBRACE          shift, and go to state 365
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    initializer                go to state 366
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 223


State 352

  118 parameter_type_list: parameter_list COMMA ELLIPSIS •

    $default  reduce using rule 118 (parameter_type_list)


State 353

  120 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 120 (parameter_list)


State 354

  168 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 168 (argument_expression_list)


State 355

  113 direct_abstract_declarator: LSQBRACKET type_qualifier_list assignment_expression RSQBRACKET •

    $default  reduce using rule 113 (direct_abstract_declarator)


State 356

  116 direct_abstract_declarator: direct_abstract_declarator LPAREN parameter_type_list RPAREN •

    $default  reduce using rule 116 (direct_abstract_declarator)


State 357

  114 direct_abstract_declarator: direct_abstract_declarator LSQBRACKET assignment_expression RSQBRACKET •

    $default  reduce using rule 114 (direct_abstract_declarator)


State 358

  212 conditional_expression: logical_or_expression QUESTION expression COLON conditional_expression •

    $default  reduce using rule 212 (conditional_expression)


State 359

  145 conditional_statement: IF LPAREN expression RPAREN • statement
  146                      | IF LPAREN expression RPAREN • statement ELSE statement

    IDENTIFIER      shift, and go to state 193
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 117
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    IF              shift, and go to state 196
    WHILE           shift, and go to state 197
    GOTO            shift, and go to state 198
    BREAK           shift, and go to state 199
    CONTINUE        shift, and go to state 200
    FOR             shift, and go to state 201
    SWITCH          shift, and go to state 202
    CASE            shift, and go to state 203
    DEFAULT         shift, and go to state 204
    DO              shift, and go to state 205
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91
    RETURN          shift, and go to state 206

    compound_statement         go to state 208
    statement                  go to state 367
    selection_statement        go to state 213
    jump_statement             go to state 214
    iteration_statement        go to state 215
    conditional_statement      go to state 216
    switch_statement           go to state 217
    labeled_statement          go to state 218
    expression_statement       go to state 219
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 360

  143 iteration_statement: WHILE LPAREN expression RPAREN • statement

    IDENTIFIER      shift, and go to state 193
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 117
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    IF              shift, and go to state 196
    WHILE           shift, and go to state 197
    GOTO            shift, and go to state 198
    BREAK           shift, and go to state 199
    CONTINUE        shift, and go to state 200
    FOR             shift, and go to state 201
    SWITCH          shift, and go to state 202
    CASE            shift, and go to state 203
    DEFAULT         shift, and go to state 204
    DO              shift, and go to state 205
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91
    RETURN          shift, and go to state 206

    compound_statement         go to state 208
    statement                  go to state 368
    selection_statement        go to state 213
    jump_statement             go to state 214
    iteration_statement        go to state 215
    conditional_statement      go to state 216
    switch_statement           go to state 217
    labeled_statement          go to state 218
    expression_statement       go to state 219
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 361

  144 iteration_statement: FOR LPAREN type_specifier expression_statement • expression_statement expression_opt RPAREN statement

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    expression_statement       go to state 369
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 362

  147 switch_statement: SWITCH LPAREN expression RPAREN • statement

    IDENTIFIER      shift, and go to state 193
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 117
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    IF              shift, and go to state 196
    WHILE           shift, and go to state 197
    GOTO            shift, and go to state 198
    BREAK           shift, and go to state 199
    CONTINUE        shift, and go to state 200
    FOR             shift, and go to state 201
    SWITCH          shift, and go to state 202
    CASE            shift, and go to state 203
    DEFAULT         shift, and go to state 204
    DO              shift, and go to state 205
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91
    RETURN          shift, and go to state 206

    compound_statement         go to state 208
    statement                  go to state 370
    selection_statement        go to state 213
    jump_statement             go to state 214
    iteration_statement        go to state 215
    conditional_statement      go to state 216
    switch_statement           go to state 217
    labeled_statement          go to state 218
    expression_statement       go to state 219
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 363

  149 labeled_statement: CASE constant_expression COLON statement •

    $default  reduce using rule 149 (labeled_statement)


State 364

  142 iteration_statement: DO statement WHILE LPAREN • expression RPAREN SEMICOLON

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 371


State 365

  126 initializer: LBRACE initializer_list COMMA RBRACE •

    $default  reduce using rule 126 (initializer)


State 366

  128 initializer_list: initializer_list COMMA initializer •

    $default  reduce using rule 128 (initializer_list)


State 367

  145 conditional_statement: IF LPAREN expression RPAREN statement •
  146                      | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 372

    $default  reduce using rule 145 (conditional_statement)


State 368

  143 iteration_statement: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 143 (iteration_statement)


State 369

  144 iteration_statement: FOR LPAREN type_specifier expression_statement expression_statement • expression_opt RPAREN statement

    IDENTIFIER      shift, and go to state 78
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91

    expression_opt             go to state 373
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 374


State 370

  147 switch_statement: SWITCH LPAREN expression RPAREN statement •

    $default  reduce using rule 147 (switch_statement)


State 371

  142 iteration_statement: DO statement WHILE LPAREN expression • RPAREN SEMICOLON
  226 expression: expression • COMMA assignment_expression

    RPAREN  shift, and go to state 375
    COMMA   shift, and go to state 257


State 372

  146 conditional_statement: IF LPAREN expression RPAREN statement ELSE • statement

    IDENTIFIER      shift, and go to state 193
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 117
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    IF              shift, and go to state 196
    WHILE           shift, and go to state 197
    GOTO            shift, and go to state 198
    BREAK           shift, and go to state 199
    CONTINUE        shift, and go to state 200
    FOR             shift, and go to state 201
    SWITCH          shift, and go to state 202
    CASE            shift, and go to state 203
    DEFAULT         shift, and go to state 204
    DO              shift, and go to state 205
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91
    RETURN          shift, and go to state 206

    compound_statement         go to state 208
    statement                  go to state 376
    selection_statement        go to state 213
    jump_statement             go to state 214
    iteration_statement        go to state 215
    conditional_statement      go to state 216
    switch_statement           go to state 217
    labeled_statement          go to state 218
    expression_statement       go to state 219
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 373

  144 iteration_statement: FOR LPAREN type_specifier expression_statement expression_statement expression_opt • RPAREN statement

    RPAREN  shift, and go to state 377


State 374

  151 expression_opt: expression •
  226 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 257

    $default  reduce using rule 151 (expression_opt)


State 375

  142 iteration_statement: DO statement WHILE LPAREN expression RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 378


State 376

  146 conditional_statement: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 146 (conditional_statement)


State 377

  144 iteration_statement: FOR LPAREN type_specifier expression_statement expression_statement expression_opt RPAREN • statement

    IDENTIFIER      shift, and go to state 193
    NUMBER          shift, and go to state 79
    CHAR_LITERAL    shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    SIZEOF          shift, and go to state 82
    LPAREN          shift, and go to state 83
    LBRACE          shift, and go to state 117
    SEMICOLON       shift, and go to state 195
    BIT_AND         shift, and go to state 84
    NOT             shift, and go to state 85
    BIT_NOT         shift, and go to state 86
    PLUS            shift, and go to state 87
    MINUS           shift, and go to state 88
    MULTIPLY        shift, and go to state 89
    IF              shift, and go to state 196
    WHILE           shift, and go to state 197
    GOTO            shift, and go to state 198
    BREAK           shift, and go to state 199
    CONTINUE        shift, and go to state 200
    FOR             shift, and go to state 201
    SWITCH          shift, and go to state 202
    CASE            shift, and go to state 203
    DEFAULT         shift, and go to state 204
    DO              shift, and go to state 205
    INCREMENT       shift, and go to state 90
    DECREMENT       shift, and go to state 91
    RETURN          shift, and go to state 206

    compound_statement         go to state 208
    statement                  go to state 379
    selection_statement        go to state 213
    jump_statement             go to state 214
    iteration_statement        go to state 215
    conditional_statement      go to state 216
    switch_statement           go to state 217
    labeled_statement          go to state 218
    expression_statement       go to state 219
    primary_expression         go to state 94
    postfix_expression         go to state 95
    unary_expression           go to state 148
    unary_operator             go to state 97
    cast_expression            go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    conditional_expression     go to state 149
    assignment_expression      go to state 150
    expression                 go to state 220


State 378

  142 iteration_statement: DO statement WHILE LPAREN expression RPAREN SEMICOLON •

    $default  reduce using rule 142 (iteration_statement)


State 379

  144 iteration_statement: FOR LPAREN type_specifier expression_statement expression_statement expression_opt RPAREN statement •

    $default  reduce using rule 144 (iteration_statement)
